/* Generated By:JavaCC: Do not edit this line. OWLLatexStyleSyntaxParserConstants.java */
package eu.fbk.irst.dkm.owlapi.latexstyleparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OWLLatexStyleSyntaxParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT_START = 5;
  /** RegularExpression Id. */
  int STRINGLITERAL_START = 8;
  /** RegularExpression Id. */
  int ANY_ESCAPED_CHAR = 9;
  /** RegularExpression Id. */
  int ANY_CHAR = 10;
  /** RegularExpression Id. */
  int STRINGLITERAL = 11;
  /** RegularExpression Id. */
  int FILEPATH = 12;
  /** RegularExpression Id. */
  int INPUT_START = 13;
  /** RegularExpression Id. */
  int INPUT_VALUE = 14;
  /** RegularExpression Id. */
  int INPUT_END = 15;
  /** RegularExpression Id. */
  int BACKSLASH = 16;
  /** RegularExpression Id. */
  int OPENPAR = 17;
  /** RegularExpression Id. */
  int CLOSEPAR = 18;
  /** RegularExpression Id. */
  int OPENSQPAR = 19;
  /** RegularExpression Id. */
  int CLOSESQPAR = 20;
  /** RegularExpression Id. */
  int OPENBRACE = 21;
  /** RegularExpression Id. */
  int CLOSEBRACE = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int LANGIDENTIFIER = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int INT = 26;
  /** RegularExpression Id. */
  int ONTOLOGY = 27;
  /** RegularExpression Id. */
  int PREFIX = 28;
  /** RegularExpression Id. */
  int BEGINONTOLOGY = 29;
  /** RegularExpression Id. */
  int ENDONTOLOGY = 30;
  /** RegularExpression Id. */
  int IMPORT = 31;
  /** RegularExpression Id. */
  int ANNOTATION = 32;
  /** RegularExpression Id. */
  int SUBANNOTATIONPROPERTYOF = 33;
  /** RegularExpression Id. */
  int ANNOTATIONPROPERTYDOMAIN = 34;
  /** RegularExpression Id. */
  int ANNOTATIONPROPERTYRANGE = 35;
  /** RegularExpression Id. */
  int OBJECTINVERSEOF = 36;
  /** RegularExpression Id. */
  int DATAINTERSECTIONOF = 37;
  /** RegularExpression Id. */
  int SEQ_DATAINTERSECTIONOF = 38;
  /** RegularExpression Id. */
  int DATAUNIONOF = 39;
  /** RegularExpression Id. */
  int SEQ_DATAUNIONOF = 40;
  /** RegularExpression Id. */
  int DATACOMPLEMENTOF = 41;
  /** RegularExpression Id. */
  int DATAONEOF = 42;
  /** RegularExpression Id. */
  int DATATYPERESTRICTION = 43;
  /** RegularExpression Id. */
  int OBJECTINTERSECTIONOF = 44;
  /** RegularExpression Id. */
  int SEQ_OBJECTINTERSECTIONOF = 45;
  /** RegularExpression Id. */
  int OBJECTUNIONOF = 46;
  /** RegularExpression Id. */
  int SEQ_OBJECTUNIONOF = 47;
  /** RegularExpression Id. */
  int OBJECTCOMPLEMENTOF = 48;
  /** RegularExpression Id. */
  int OBJECTONEOF = 49;
  /** RegularExpression Id. */
  int OBJECTSOMEVALUESFROM = 50;
  /** RegularExpression Id. */
  int OBJECTALLVALUESFROM = 51;
  /** RegularExpression Id. */
  int OBJECTHASVALUE = 52;
  /** RegularExpression Id. */
  int OBJECTHASSELF = 53;
  /** RegularExpression Id. */
  int OBJECTMINCARDINALITY = 54;
  /** RegularExpression Id. */
  int OBJECTMAXCARDINALITY = 55;
  /** RegularExpression Id. */
  int OBJECTEXACTCARDINALITY = 56;
  /** RegularExpression Id. */
  int DATASOMEVALUESFROM = 57;
  /** RegularExpression Id. */
  int DATAALLVALUESFROM = 58;
  /** RegularExpression Id. */
  int DATAHASVALUE = 59;
  /** RegularExpression Id. */
  int DATAMINCARDINALITY = 60;
  /** RegularExpression Id. */
  int DATAMAXCARDINALITY = 61;
  /** RegularExpression Id. */
  int DATAEXACTCARDINALITY = 62;
  /** RegularExpression Id. */
  int CLASS = 63;
  /** RegularExpression Id. */
  int DATATYPE = 64;
  /** RegularExpression Id. */
  int OBJECTPROP = 65;
  /** RegularExpression Id. */
  int DATAPROP = 66;
  /** RegularExpression Id. */
  int NAMEDINDIVIDUAL = 67;
  /** RegularExpression Id. */
  int SUBCLASSOF = 68;
  /** RegularExpression Id. */
  int EQUIVALENTCLASSES = 69;
  /** RegularExpression Id. */
  int SEQ_EQUIVALENTCLASSES = 70;
  /** RegularExpression Id. */
  int DISJOINTCLASSES = 71;
  /** RegularExpression Id. */
  int SEQ_DISJOINTCLASSES = 72;
  /** RegularExpression Id. */
  int DISJOINTUNION = 73;
  /** RegularExpression Id. */
  int SUBOBJECTPROPERTYOF = 74;
  /** RegularExpression Id. */
  int SUBOBJECTPROPERTYCHAIN = 75;
  /** RegularExpression Id. */
  int EQUIVALENTOBJECTPROPERTIES = 76;
  /** RegularExpression Id. */
  int SEQ_EQUIVALENTOBJECTPROPERTIES = 77;
  /** RegularExpression Id. */
  int DISJOINTOBJECTPROPERTIES = 78;
  /** RegularExpression Id. */
  int SEQ_DISJOINTOBJECTPROPERTIES = 79;
  /** RegularExpression Id. */
  int INVERSEOBJECTPROPERTIES = 80;
  /** RegularExpression Id. */
  int OBJECTPROPERTYDOMAIN = 81;
  /** RegularExpression Id. */
  int OBJECTPROPERTYRANGE = 82;
  /** RegularExpression Id. */
  int FUNCTIONALOBJECTPROPERTY = 83;
  /** RegularExpression Id. */
  int INVERSEFUNCTIONALOBJECTPROPERTY = 84;
  /** RegularExpression Id. */
  int REFLEXIVEOBJECTPROPERTY = 85;
  /** RegularExpression Id. */
  int IRREFLEXIVEOBJECTPROPERTY = 86;
  /** RegularExpression Id. */
  int SYMMETRICOBJECTPROPERTY = 87;
  /** RegularExpression Id. */
  int ASYMMETRICOBJECTPROPERTY = 88;
  /** RegularExpression Id. */
  int TRANSITIVEOBJECTPROPERTY = 89;
  /** RegularExpression Id. */
  int SUBDATAPROPERTYOF = 90;
  /** RegularExpression Id. */
  int EQUIVALENTDATAPROPERTIES = 91;
  /** RegularExpression Id. */
  int SEQ_EQUIVALENTDATAPROPERTIES = 92;
  /** RegularExpression Id. */
  int DISJOINTDATAPROPERTIES = 93;
  /** RegularExpression Id. */
  int SEQ_DISJOINTDATAPROPERTIES = 94;
  /** RegularExpression Id. */
  int DATAPROPERTYDOMAIN = 95;
  /** RegularExpression Id. */
  int DATAPROPERTYRANGE = 96;
  /** RegularExpression Id. */
  int FUNCTIONALDATAPROPERTY = 97;
  /** RegularExpression Id. */
  int DATATYPEDEFINITION = 98;
  /** RegularExpression Id. */
  int HASKEY = 99;
  /** RegularExpression Id. */
  int SAMEINDIVIDUAL = 100;
  /** RegularExpression Id. */
  int SEQ_SAMEINDIVIDUAL = 101;
  /** RegularExpression Id. */
  int DIFFERENTINDIVIDUALS = 102;
  /** RegularExpression Id. */
  int SEQ_DIFFERENTINDIVIDUALS = 103;
  /** RegularExpression Id. */
  int FULLIRI = 104;
  /** RegularExpression Id. */
  int PNAME_NS = 105;
  /** RegularExpression Id. */
  int PN_LOCAL = 106;
  /** RegularExpression Id. */
  int PNAME_LN = 107;
  /** RegularExpression Id. */
  int PN_PREFIX = 108;
  /** RegularExpression Id. */
  int PN_CHARS_BASE = 109;
  /** RegularExpression Id. */
  int PN_CHARS = 110;
  /** RegularExpression Id. */
  int PN_CHARS_U = 111;
  /** RegularExpression Id. */
  int NODEID = 112;
  /** RegularExpression Id. */
  int ERROR = 113;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;
  /** Lexical state. */
  int IN_STRING_LITERAL = 2;
  /** Lexical state. */
  int IN_INPUT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "\"%\"",
    "<token of kind 6>",
    "\"\\n\"",
    "\"\\\"\"",
    "<ANY_ESCAPED_CHAR>",
    "<ANY_CHAR>",
    "\"\\\"\"",
    "<FILEPATH>",
    "<INPUT_START>",
    "<INPUT_VALUE>",
    "<INPUT_END>",
    "\"\\\\\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\"@\"",
    "\"!\"",
    "<INT>",
    "\"ontology\"",
    "<PREFIX>",
    "<BEGINONTOLOGY>",
    "<ENDONTOLOGY>",
    "<IMPORT>",
    "<ANNOTATION>",
    "<SUBANNOTATIONPROPERTYOF>",
    "<ANNOTATIONPROPERTYDOMAIN>",
    "<ANNOTATIONPROPERTYRANGE>",
    "<OBJECTINVERSEOF>",
    "<DATAINTERSECTIONOF>",
    "<SEQ_DATAINTERSECTIONOF>",
    "<DATAUNIONOF>",
    "<SEQ_DATAUNIONOF>",
    "<DATACOMPLEMENTOF>",
    "<DATAONEOF>",
    "<DATATYPERESTRICTION>",
    "<OBJECTINTERSECTIONOF>",
    "<SEQ_OBJECTINTERSECTIONOF>",
    "<OBJECTUNIONOF>",
    "<SEQ_OBJECTUNIONOF>",
    "<OBJECTCOMPLEMENTOF>",
    "<OBJECTONEOF>",
    "<OBJECTSOMEVALUESFROM>",
    "<OBJECTALLVALUESFROM>",
    "<OBJECTHASVALUE>",
    "<OBJECTHASSELF>",
    "<OBJECTMINCARDINALITY>",
    "<OBJECTMAXCARDINALITY>",
    "<OBJECTEXACTCARDINALITY>",
    "<DATASOMEVALUESFROM>",
    "<DATAALLVALUESFROM>",
    "<DATAHASVALUE>",
    "<DATAMINCARDINALITY>",
    "<DATAMAXCARDINALITY>",
    "<DATAEXACTCARDINALITY>",
    "<CLASS>",
    "<DATATYPE>",
    "<OBJECTPROP>",
    "<DATAPROP>",
    "<NAMEDINDIVIDUAL>",
    "<SUBCLASSOF>",
    "<EQUIVALENTCLASSES>",
    "<SEQ_EQUIVALENTCLASSES>",
    "<DISJOINTCLASSES>",
    "<SEQ_DISJOINTCLASSES>",
    "<DISJOINTUNION>",
    "<SUBOBJECTPROPERTYOF>",
    "<SUBOBJECTPROPERTYCHAIN>",
    "<EQUIVALENTOBJECTPROPERTIES>",
    "<SEQ_EQUIVALENTOBJECTPROPERTIES>",
    "<DISJOINTOBJECTPROPERTIES>",
    "<SEQ_DISJOINTOBJECTPROPERTIES>",
    "<INVERSEOBJECTPROPERTIES>",
    "<OBJECTPROPERTYDOMAIN>",
    "<OBJECTPROPERTYRANGE>",
    "<FUNCTIONALOBJECTPROPERTY>",
    "<INVERSEFUNCTIONALOBJECTPROPERTY>",
    "<REFLEXIVEOBJECTPROPERTY>",
    "<IRREFLEXIVEOBJECTPROPERTY>",
    "<SYMMETRICOBJECTPROPERTY>",
    "<ASYMMETRICOBJECTPROPERTY>",
    "<TRANSITIVEOBJECTPROPERTY>",
    "<SUBDATAPROPERTYOF>",
    "<EQUIVALENTDATAPROPERTIES>",
    "<SEQ_EQUIVALENTDATAPROPERTIES>",
    "<DISJOINTDATAPROPERTIES>",
    "<SEQ_DISJOINTDATAPROPERTIES>",
    "<DATAPROPERTYDOMAIN>",
    "<DATAPROPERTYRANGE>",
    "<FUNCTIONALDATAPROPERTY>",
    "<DATATYPEDEFINITION>",
    "<HASKEY>",
    "<SAMEINDIVIDUAL>",
    "<SEQ_SAMEINDIVIDUAL>",
    "<DIFFERENTINDIVIDUALS>",
    "<SEQ_DIFFERENTINDIVIDUALS>",
    "<FULLIRI>",
    "<PNAME_NS>",
    "<PN_LOCAL>",
    "<PNAME_LN>",
    "<PN_PREFIX>",
    "<PN_CHARS_BASE>",
    "<PN_CHARS>",
    "<PN_CHARS_U>",
    "<NODEID>",
    "<ERROR>",
  };

}
