/* Generated By:JavaCC: Do not edit this line. OWLLatexStyleSyntaxParser.java */
package eu.fbk.irst.dkm.owlapi.latexstyleparser;

import org.semanticweb.owlapi.model.*;
import org.semanticweb.owlapi.vocab.*;
import java.net.*;
import java.util.*;
import java.io.*;
import org.semanticweb.owlapi.util.EscapeUtils;
import eu.fbk.irst.dkm.owlapi.io.OWLLatexStyleSyntaxOntologyFormat;
import org.semanticweb.owlapi.io.OWLParserException;

@SuppressWarnings("javadoc")
public class OWLLatexStyleSyntaxParser implements OWLLatexStyleSyntaxParserConstants {

        private OWLOntologyManager man;

    private OWLOntologyLoaderConfiguration configuration;

    private OWLOntology ontology;

    private OWLDataFactory dataFactory;

    private Map<String, IRI> string2IRI;

    private Map<String, String> prefixMap;

    private IRI ontologyIRI;

    private boolean ignoreAnnotationsAndDeclarations = false;

    private Set<OWLAnnotation> currentAnnotations;

    @Deprecated
    public void setUp(OWLOntologyManager man, OWLOntology ontology, OWLOntologyLoaderConfiguration configuration) {
        setUp(ontology, configuration);
    }

        public void setUp(OWLOntology ontology, OWLOntologyLoaderConfiguration configuration) {
        this.man = ontology.getOWLOntologyManager();
        this.ontology = ontology;
        this.configuration = configuration;
        this.dataFactory = man.getOWLDataFactory();
        this.currentAnnotations = new HashSet<OWLAnnotation>();
        if (prefixMap == null) {
            prefixMap = new HashMap<String, String>();
            prefixMap.put("owl:", Namespaces.OWL.toString());
            prefixMap.put("rdf:", Namespaces.RDF.toString());
            prefixMap.put("rdfs:", Namespaces.RDFS.toString());
            prefixMap.put("xml:", Namespaces.XML.toString());
            prefixMap.put("xsd:", Namespaces.XSD.toString());
        }
        string2IRI = new HashMap<String, IRI>();
    }

    public IRI getIRI(String s) {
        IRI iri = string2IRI.get(s);
            if (iri == null) {
                    if (s.charAt(0) == '<') {
                        // fullIRI case
                            iri = IRI.create(s.substring(1, s.length() - 1));
                    } else {
                            int colonIndex = s.indexOf(':');
                            // simpleIRI case
                            if (colonIndex == -1) {
                              String defaultPrefix = prefixMap.get("");
                                if (defaultPrefix == null) {
                                    throw new OWLRuntimeException("The default prefix has not been set");
                                }
                                    String fullIRIString = defaultPrefix + s;
                                    iri = IRI.create(fullIRIString);
                            } else {
                                // abbreviatedIRI case
                                String prefixName = s.substring(0, colonIndex + 1);
                                String prefix = prefixMap.get(prefixName);
                                if (prefix == null) {
                                    throw new OWLRuntimeException("Undefined prefix name: " + prefixName);
                                }
                                String fullIRIString = prefix + s.substring(colonIndex + 1);
                                iri = IRI.create(fullIRIString);
                            }
                    }
                    string2IRI.put(s, iri);
            }
        return iri;
        }

        public void setIgnoreAnnotationsAndDeclarations(boolean b) {
                ignoreAnnotationsAndDeclarations = b;
    }

    protected void applyChange(OWLOntologyChange chg) {
        try {
            man.applyChange(chg);
        } catch(OWLOntologyChangeException e) {
            e.printStackTrace();
        }
    }

    protected void addAxiom(OWLAxiom ax) {
        if (!(ax instanceof OWLAnnotationAxiom) || configuration.isLoadAnnotationAxioms()) {
            AddAxiom addAxiom = new AddAxiom(ontology, ax);
            applyChange(addAxiom);
        }
    }

    public void setPrefixes(PrefixManager nsm) {
        if (prefixMap == null) {
            prefixMap = new HashMap<String, String>();
        }
        prefixMap.putAll(nsm.getPrefixName2PrefixMap());
    }

  final public OWLLatexStyleSyntaxOntologyFormat parse() throws ParseException, OWLParserException, IOException, UnloadableImportException {
    if (jj_2_1(2)) {
      DefaultPrefix();
    } else {
      ;
    }
    label_1:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case PREFIX:
        ;
        break;
      default:
        jj_la1[0] = jj_gen;
        break label_1;
      }
      Prefix();
    }
    Ontology();
    jj_consume_token(0);
      OWLLatexStyleSyntaxOntologyFormat format = new OWLLatexStyleSyntaxOntologyFormat();
      for (String pn : prefixMap.keySet()) {
        format.setPrefix(pn, prefixMap.get(pn));
      }
      {if (true) return format;}
    throw new Error("Missing return statement in function");
  }

  final public void Ontology() throws ParseException, OWLParserException, UnloadableImportException {
    OWLAnnotation anno;
    OWLAxiom ax;
    OWLImportsDeclaration decl;
    IRI versionIRI = null;
    jj_consume_token(BEGINONTOLOGY);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENSQPAR:
      jj_consume_token(OPENSQPAR);
      ontologyIRI = IRI();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        jj_consume_token(COMMA);
        versionIRI = IRI();
        break;
      default:
        jj_la1[1] = jj_gen;
        ;
      }
      jj_consume_token(CLOSESQPAR);
      break;
    default:
      jj_la1[2] = jj_gen;
      ;
    }
        OWLOntologyID id = new OWLOntologyID(ontologyIRI, versionIRI);
        applyChange(new SetOntologyID(ontology, id));
    label_2:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case IMPORT:
      case ANNOTATION:
        ;
        break;
      default:
        jj_la1[3] = jj_gen;
        break label_2;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case IMPORT:
        decl = ImportsDeclaration();
        applyChange(new AddImport(ontology, decl));
        man.makeLoadImportRequest(decl, configuration);
        break;
      case ANNOTATION:
        anno = Annotation();
        applyChange(new AddOntologyAnnotation(ontology, anno));
        currentAnnotations.clear();
        break;
      default:
        jj_la1[4] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    label_3:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case OPENPAR:
      case NOT:
      case SEQ_OBJECTINTERSECTIONOF:
      case SEQ_OBJECTUNIONOF:
      case OBJECTONEOF:
      case OBJECTSOMEVALUESFROM:
      case OBJECTALLVALUESFROM:
      case OBJECTHASVALUE:
      case OBJECTMINCARDINALITY:
      case OBJECTMAXCARDINALITY:
      case OBJECTEXACTCARDINALITY:
      case DATASOMEVALUESFROM:
      case DATAALLVALUESFROM:
      case DATAHASVALUE:
      case DATAMINCARDINALITY:
      case DATAMAXCARDINALITY:
      case DATAEXACTCARDINALITY:
      case SEQ_EQUIVALENTCLASSES:
      case SEQ_DISJOINTCLASSES:
      case SUBOBJECTPROPERTYCHAIN:
      case SEQ_EQUIVALENTOBJECTPROPERTIES:
      case SEQ_DISJOINTOBJECTPROPERTIES:
      case SEQ_EQUIVALENTDATAPROPERTIES:
      case SEQ_DISJOINTDATAPROPERTIES:
      case SEQ_SAMEINDIVIDUAL:
      case SEQ_DIFFERENTINDIVIDUALS:
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
      case NODEID:
        ;
        break;
      default:
        jj_la1[5] = jj_gen;
        break label_3;
      }
      ax = Axiom();
        addAxiom(ax);
        currentAnnotations.clear();
    }
    jj_consume_token(ENDONTOLOGY);
  }

  final public void DefaultPrefix() throws ParseException {
    IRI iri;
    jj_consume_token(PREFIX);
    iri = FullIRI();
                prefixMap.put("", iri.toString());
  }

  final public void Prefix() throws ParseException {
    String prefixName = "";
    IRI iri;
    jj_consume_token(PREFIX);
    prefixName = PrefixName();
    iri = FullIRI();
        prefixMap.put(prefixName, iri.toString());
  }

  final public OWLImportsDeclaration ImportsDeclaration() throws ParseException {
        IRI iri;
    jj_consume_token(IMPORT);
    iri = IRI();
        OWLImportsDeclaration importsDeclaration = dataFactory.getOWLImportsDeclaration(iri);
        {if (true) return importsDeclaration;}
    throw new Error("Missing return statement in function");
  }

  final public IRI IRI() throws ParseException {
    IRI iri;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
      iri = FullIRI();
      break;
    case PNAME_LN:
      iri = AbbreviatedIRI();
      break;
    case PN_LOCAL:
      iri = SimpleIRI();
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return iri;}
    throw new Error("Missing return statement in function");
  }

  final public IRI FullIRI() throws ParseException {
    Token t;
    t = jj_consume_token(FULLIRI);
        {if (true) return getIRI(t.image);}
    throw new Error("Missing return statement in function");
  }

  final public IRI AbbreviatedIRI() throws ParseException {
    Token t;
    t = jj_consume_token(PNAME_LN);
        {if (true) return getIRI(t.image);}
    throw new Error("Missing return statement in function");
  }

  final public IRI SimpleIRI() throws ParseException {
    Token t;
    t = jj_consume_token(PN_LOCAL);
        {if (true) return getIRI(t.image);}
    throw new Error("Missing return statement in function");
  }

  final public String PrefixName() throws ParseException {
    Token t;
    t = jj_consume_token(PNAME_NS);
        {if (true) return t.image;}
    throw new Error("Missing return statement in function");
  }

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Class Descriptions
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLClassExpression ClassExpression() throws ParseException {
    OWLClassExpression desc;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      desc = ClassIRI();
      break;
    case SEQ_OBJECTINTERSECTIONOF:
    case SEQ_OBJECTUNIONOF:
    case OBJECTONEOF:
    case OBJECTSOMEVALUESFROM:
    case OBJECTALLVALUESFROM:
    case OBJECTHASVALUE:
    case OBJECTMINCARDINALITY:
    case OBJECTMAXCARDINALITY:
    case OBJECTEXACTCARDINALITY:
    case DATASOMEVALUESFROM:
    case DATAALLVALUESFROM:
    case DATAHASVALUE:
    case DATAMINCARDINALITY:
    case DATAMAXCARDINALITY:
    case DATAEXACTCARDINALITY:
      desc = AtomicClassExpression();
      break;
    case OPENPAR:
      jj_consume_token(OPENPAR);
      desc = NonAtomicClassExpression();
      jj_consume_token(CLOSEPAR);
      break;
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return desc;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClass ClassIRI() throws ParseException {
    IRI iri;
    iri = IRI();
        {if (true) return dataFactory.getOWLClass(iri);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression NonAtomicClassExpression() throws ParseException {
    OWLClassExpression desc;
    if (jj_2_2(2147483647)) {
      desc = ObjectIntersectionOf();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case OPENPAR:
      case SEQ_OBJECTINTERSECTIONOF:
      case SEQ_OBJECTUNIONOF:
      case OBJECTONEOF:
      case OBJECTSOMEVALUESFROM:
      case OBJECTALLVALUESFROM:
      case OBJECTHASVALUE:
      case OBJECTMINCARDINALITY:
      case OBJECTMAXCARDINALITY:
      case OBJECTEXACTCARDINALITY:
      case DATASOMEVALUESFROM:
      case DATAALLVALUESFROM:
      case DATAHASVALUE:
      case DATAMINCARDINALITY:
      case DATAMAXCARDINALITY:
      case DATAEXACTCARDINALITY:
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        desc = ObjectUnionOf();
        break;
      case OBJECTCOMPLEMENTOF:
        desc = ObjectComplementOf();
        break;
      case OBJECTHASSELF:
        desc = ObjectSelf();
        break;
      default:
        jj_la1[8] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return desc;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectIntersectionOf() throws ParseException {
        OWLClassExpression operandA;
        OWLClassExpression operandB;
    Set<OWLClassExpression> classExpressions = new HashSet<OWLClassExpression>();
    operandA = ClassExpression();
    jj_consume_token(OBJECTINTERSECTIONOF);
    operandB = ClassExpression();
                classExpressions.add(operandA);
                classExpressions.add(operandB);
        {if (true) return dataFactory.getOWLObjectIntersectionOf(classExpressions);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectUnionOf() throws ParseException {
        OWLClassExpression operandA;
        OWLClassExpression operandB;
    Set<OWLClassExpression> classExpressions = new HashSet<OWLClassExpression>();
    operandA = ClassExpression();
    jj_consume_token(OBJECTUNIONOF);
    operandB = ClassExpression();
                classExpressions.add(operandA);
                classExpressions.add(operandB);
        {if (true) return dataFactory.getOWLObjectUnionOf(classExpressions);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectComplementOf() throws ParseException {
    OWLClassExpression operand;
    jj_consume_token(OBJECTCOMPLEMENTOF);
    operand = ClassExpression();
        {if (true) return dataFactory.getOWLObjectComplementOf(operand);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectSelf() throws ParseException {
    OWLObjectPropertyExpression prop;
    jj_consume_token(OBJECTHASSELF);
    prop = ObjectPropertyExpression();
        {if (true) return dataFactory.getOWLObjectHasSelf(prop);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression AtomicClassExpression() throws ParseException {
    OWLClassExpression desc;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SEQ_OBJECTINTERSECTIONOF:
      desc = SequenceObjectIntersectionOf();
      break;
    case SEQ_OBJECTUNIONOF:
      desc = SequenceObjectUnionOf();
      break;
    case OBJECTONEOF:
      desc = ObjectOneOf();
      break;
    case OBJECTSOMEVALUESFROM:
      desc = ObjectSomeValuesFrom();
      break;
    case OBJECTALLVALUESFROM:
      desc = ObjectAllValuesFrom();
      break;
    case OBJECTHASVALUE:
      desc = ObjectHasValue();
      break;
    case OBJECTMINCARDINALITY:
      desc = ObjectMinCardinality();
      break;
    case OBJECTMAXCARDINALITY:
      desc = ObjectMaxCardinality();
      break;
    case OBJECTEXACTCARDINALITY:
      desc = ObjectExactCardinality();
      break;
    case DATASOMEVALUESFROM:
      desc = DataSomeValuesFrom();
      break;
    case DATAALLVALUESFROM:
      desc = DataAllValuesFrom();
      break;
    case DATAHASVALUE:
      desc = DataHasValue();
      break;
    case DATAMINCARDINALITY:
      desc = DataMinCardinality();
      break;
    case DATAMAXCARDINALITY:
      desc = DataMaxCardinality();
      break;
    case DATAEXACTCARDINALITY:
      desc = DataExactCardinality();
      break;
    default:
      jj_la1[9] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return desc;}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLClassExpression> ClassExpressionSet() throws ParseException {
    Set<OWLClassExpression> classExpressions = new HashSet<OWLClassExpression>();
    OWLClassExpression desc;
    jj_consume_token(OPENBRACE);
    desc = ClassExpression();
                                          classExpressions.add(desc);
    label_4:
    while (true) {
      jj_consume_token(COMMA);
      desc = ClassExpression();
                                      classExpressions.add(desc);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[10] = jj_gen;
        break label_4;
      }
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return classExpressions;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression SequenceObjectIntersectionOf() throws ParseException {
    Set<OWLClassExpression> classExpressions;
    jj_consume_token(SEQ_OBJECTINTERSECTIONOF);
    classExpressions = ClassExpressionSet();
        {if (true) return dataFactory.getOWLObjectIntersectionOf(classExpressions);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression SequenceObjectUnionOf() throws ParseException {
    Set<OWLClassExpression> classExpressions;
    jj_consume_token(SEQ_OBJECTUNIONOF);
    classExpressions = ClassExpressionSet();
        {if (true) return dataFactory.getOWLObjectUnionOf(classExpressions);}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLIndividual> IndividualMinOneSet() throws ParseException {
    Set<OWLIndividual> individuals = new HashSet<OWLIndividual>();
    OWLIndividual ind;
    jj_consume_token(OPENBRACE);
    ind = Individual();
                                   individuals.add(ind);
    label_5:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[11] = jj_gen;
        break label_5;
      }
      jj_consume_token(COMMA);
      ind = Individual();
                                    individuals.add(ind);
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return individuals;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectOneOf() throws ParseException {
    Set<OWLIndividual> individuals;
    jj_consume_token(OBJECTONEOF);
    individuals = IndividualMinOneSet();
        {if (true) return dataFactory.getOWLObjectOneOf(individuals);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectSomeValuesFrom() throws ParseException {
    OWLObjectPropertyExpression prop;
    OWLClassExpression filler;
    jj_consume_token(OBJECTSOMEVALUESFROM);
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    filler = ClassExpression();
    jj_consume_token(CLOSEBRACE);
        {if (true) return dataFactory.getOWLObjectSomeValuesFrom(prop, filler);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectAllValuesFrom() throws ParseException {
    OWLObjectPropertyExpression prop;
    OWLClassExpression filler;
    jj_consume_token(OBJECTALLVALUESFROM);
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    filler = ClassExpression();
    jj_consume_token(CLOSEBRACE);
        {if (true) return dataFactory.getOWLObjectAllValuesFrom(prop, filler);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectHasValue() throws ParseException {
    OWLObjectPropertyExpression prop;
    OWLIndividual ind;
    jj_consume_token(OBJECTHASVALUE);
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    ind = Individual();
    jj_consume_token(CLOSEBRACE);
        {if (true) return dataFactory.getOWLObjectHasValue(prop, ind);}
    throw new Error("Missing return statement in function");
  }

  final public int Cardinality() throws ParseException {
    int card = 0;
    card = Integer();
        {if (true) return card;}
    throw new Error("Missing return statement in function");
  }

  final public int Integer() throws ParseException {
    Token t;
    t = jj_consume_token(INT);
        int i = Integer.parseInt(t.image);
        {if (true) return i;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectMinCardinality() throws ParseException {
    int cardinality = 0;
    OWLObjectPropertyExpression prop = null;
    OWLClassExpression filler = null;
    jj_consume_token(OBJECTMINCARDINALITY);
    cardinality = Cardinality();
    jj_consume_token(CLOSESQPAR);
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENBRACE:
      jj_consume_token(OPENBRACE);
      filler = ClassExpression();
      jj_consume_token(CLOSEBRACE);
      break;
    default:
      jj_la1[12] = jj_gen;
      ;
    }
        if (filler == null) {
            {if (true) return dataFactory.getOWLObjectMinCardinality(cardinality, prop);}
        } else {
            {if (true) return dataFactory.getOWLObjectMinCardinality(cardinality, prop, filler);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectMaxCardinality() throws ParseException {
    int cardinality = 0;
    OWLObjectPropertyExpression prop = null;
    OWLClassExpression filler = null;
    jj_consume_token(OBJECTMAXCARDINALITY);
    cardinality = Cardinality();
    jj_consume_token(CLOSESQPAR);
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENBRACE:
      jj_consume_token(OPENBRACE);
      filler = ClassExpression();
      jj_consume_token(CLOSEBRACE);
      break;
    default:
      jj_la1[13] = jj_gen;
      ;
    }
        if (filler == null) {
            {if (true) return dataFactory.getOWLObjectMaxCardinality(cardinality, prop);}
        } else {
            {if (true) return dataFactory.getOWLObjectMaxCardinality(cardinality, prop, filler);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression ObjectExactCardinality() throws ParseException {
    int cardinality = 0;
    OWLObjectPropertyExpression prop = null;
    OWLClassExpression filler = null;
    jj_consume_token(OBJECTEXACTCARDINALITY);
    cardinality = Cardinality();
    jj_consume_token(CLOSESQPAR);
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENBRACE:
      jj_consume_token(OPENBRACE);
      filler = ClassExpression();
      jj_consume_token(CLOSEBRACE);
      break;
    default:
      jj_la1[14] = jj_gen;
      ;
    }
        if (filler == null) {
            {if (true) return dataFactory.getOWLObjectExactCardinality(cardinality, prop);}
        } else {
            {if (true) return dataFactory.getOWLObjectExactCardinality(cardinality, prop, filler);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression DataSomeValuesFrom() throws ParseException {
    OWLDataPropertyExpression prop = null;
    OWLDataRange dataRange = null;
    jj_consume_token(DATASOMEVALUESFROM);
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    dataRange = DataRange();
    jj_consume_token(CLOSEBRACE);
        {if (true) return dataFactory.getOWLDataSomeValuesFrom(prop, dataRange);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression DataAllValuesFrom() throws ParseException {
    OWLDataPropertyExpression prop = null;
    OWLDataRange dataRange = null;
    jj_consume_token(DATAALLVALUESFROM);
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    dataRange = DataRange();
    jj_consume_token(CLOSEBRACE);
        {if (true) return dataFactory.getOWLDataAllValuesFrom(prop, dataRange);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression DataHasValue() throws ParseException {
    OWLDataPropertyExpression prop = null;
    OWLLiteral literal = null;
    jj_consume_token(DATAHASVALUE);
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    literal = Literal();
    jj_consume_token(CLOSEBRACE);
        {if (true) return dataFactory.getOWLDataHasValue(prop, literal);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression DataMinCardinality() throws ParseException {
    int cardinality = 0;
    OWLDataPropertyExpression prop = null;
    OWLDataRange rng = null;
    jj_consume_token(DATAMINCARDINALITY);
    cardinality = Cardinality();
    jj_consume_token(CLOSESQPAR);
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENBRACE:
      jj_consume_token(OPENBRACE);
      rng = DataRange();
      jj_consume_token(CLOSEBRACE);
      break;
    default:
      jj_la1[15] = jj_gen;
      ;
    }
        if (rng == null) {
            {if (true) return dataFactory.getOWLDataMinCardinality(cardinality, prop);}
        } else {
            {if (true) return dataFactory.getOWLDataMinCardinality(cardinality, prop, rng);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression DataMaxCardinality() throws ParseException {
    int cardinality = 0;
    OWLDataPropertyExpression prop = null;
    OWLDataRange rng = null;
    jj_consume_token(DATAMAXCARDINALITY);
    cardinality = Cardinality();
    jj_consume_token(CLOSESQPAR);
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENBRACE:
      jj_consume_token(OPENBRACE);
      rng = DataRange();
      jj_consume_token(CLOSEBRACE);
      break;
    default:
      jj_la1[16] = jj_gen;
      ;
    }
        if (rng == null) {
            {if (true) return dataFactory.getOWLDataMaxCardinality(cardinality, prop);}
        } else {
            {if (true) return dataFactory.getOWLDataMaxCardinality(cardinality, prop, rng);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLClassExpression DataExactCardinality() throws ParseException {
    int cardinality = 0;
    OWLDataPropertyExpression prop = null;
    OWLDataRange rng = null;
    jj_consume_token(DATAEXACTCARDINALITY);
    cardinality = Cardinality();
    jj_consume_token(CLOSESQPAR);
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
    jj_consume_token(CLOSEBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENBRACE:
      jj_consume_token(OPENBRACE);
      rng = DataRange();
      jj_consume_token(CLOSEBRACE);
      break;
    default:
      jj_la1[17] = jj_gen;
      ;
    }
        if (rng == null) {
            {if (true) return dataFactory.getOWLDataExactCardinality(cardinality, prop);}
        } else {
            {if (true) return dataFactory.getOWLDataExactCardinality(cardinality, prop, rng);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLObjectPropertyExpression ObjectPropertyExpression() throws ParseException {
    OWLObjectPropertyExpression prop;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENPAR:
      jj_consume_token(OPENPAR);
      prop = InverseObjectProperty();
      jj_consume_token(CLOSEPAR);
      break;
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      prop = ObjectPropertyIRI();
      break;
    default:
      jj_la1[18] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
                {if (true) return prop;}
    throw new Error("Missing return statement in function");
  }

  final public OWLObjectPropertyExpression InverseObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    jj_consume_token(OBJECTINVERSEOF);
    prop = ObjectPropertyExpression();
        {if (true) return dataFactory.getOWLObjectInverseOf(prop);}
    throw new Error("Missing return statement in function");
  }

  final public OWLObjectProperty ObjectPropertyIRI() throws ParseException {
    IRI iri;
    iri = IRI();
      {if (true) return dataFactory.getOWLObjectProperty(iri);}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataPropertyExpression DataPropertyExpression() throws ParseException {
    OWLDataPropertyExpression prop;
    prop = DataPropertyIRI();
        {if (true) return prop;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataProperty DataPropertyIRI() throws ParseException {
    IRI iri;
    iri = IRI();
        {if (true) return dataFactory.getOWLDataProperty(iri);}
    throw new Error("Missing return statement in function");
  }

  final public OWLNamedIndividual IndividualIRI() throws ParseException {
    IRI iri;
    iri = IRI();
      {if (true) return dataFactory.getOWLNamedIndividual(iri);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividual Individual() throws ParseException {
    OWLIndividual ind;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      ind = IndividualIRI();
      break;
    case NODEID:
      ind = AnonymousIndividual();
      break;
    default:
      jj_la1[19] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ind;}
    throw new Error("Missing return statement in function");
  }

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Data Ranges
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLDataRange DataRange() throws ParseException {
    OWLDataRange rng;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      rng = DatatypeIRI();
      break;
    case SEQ_DATAINTERSECTIONOF:
    case SEQ_DATAUNIONOF:
    case DATAONEOF:
      rng = AtomicDataRange();
      break;
    case OPENPAR:
      jj_consume_token(OPENPAR);
      rng = NonAtomicDataRange();
      jj_consume_token(CLOSEPAR);
      break;
    default:
      jj_la1[20] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return rng;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange AtomicDataRange() throws ParseException {
    OWLDataRange rng;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SEQ_DATAINTERSECTIONOF:
      rng = SequenceDataIntersectionOf();
      break;
    case SEQ_DATAUNIONOF:
      rng = SequenceDataUnionOf();
      break;
    case DATAONEOF:
      rng = DataOneOf();
      break;
    default:
      jj_la1[21] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return rng;}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLDataRange> DataRangeSet() throws ParseException {
    Set<OWLDataRange> ranges = new HashSet<OWLDataRange>();
    OWLDataRange dataRange;
    jj_consume_token(OPENBRACE);
    dataRange = DataRange();
                                        ranges.add(dataRange);
    label_6:
    while (true) {
      jj_consume_token(COMMA);
      dataRange = DataRange();
                                         ranges.add(dataRange);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[22] = jj_gen;
        break label_6;
      }
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return ranges;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange SequenceDataIntersectionOf() throws ParseException {
    Set<OWLDataRange> ranges = new HashSet<OWLDataRange>();
    jj_consume_token(SEQ_DATAINTERSECTIONOF);
    ranges = DataRangeSet();
        {if (true) return dataFactory.getOWLDataIntersectionOf(ranges);}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange SequenceDataUnionOf() throws ParseException {
    Set<OWLDataRange> ranges = new HashSet<OWLDataRange>();
    jj_consume_token(SEQ_DATAUNIONOF);
    ranges = DataRangeSet();
        {if (true) return dataFactory.getOWLDataUnionOf(ranges);}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLLiteral> LiteralMinOneSet() throws ParseException {
    Set<OWLLiteral> values = new HashSet<OWLLiteral>();
    OWLLiteral literal;
    jj_consume_token(OPENBRACE);
    literal = Literal();
                                    values.add(literal);
    label_7:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[23] = jj_gen;
        break label_7;
      }
      jj_consume_token(COMMA);
      literal = Literal();
                                     values.add(literal);
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return values;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange DataOneOf() throws ParseException {
    Set<OWLLiteral> values = new HashSet<OWLLiteral>();
    jj_consume_token(DATAONEOF);
    values = LiteralMinOneSet();
        {if (true) return dataFactory.getOWLDataOneOf(values);}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange NonAtomicDataRange() throws ParseException {
    OWLDataRange rng;
    if (jj_2_3(2147483647)) {
      rng = DataIntersectionOf();
    } else if (jj_2_4(2147483647)) {
      rng = DataUnionOf();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        rng = DataRangeRestriction();
        break;
      case DATACOMPLEMENTOF:
        rng = DataComplementOf();
        break;
      default:
        jj_la1[24] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return rng;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange DataIntersectionOf() throws ParseException {
    OWLDataRange drA;
    OWLDataRange drB;
    Set<OWLDataRange> ranges = new HashSet<OWLDataRange>();
    drA = DataRange();
    jj_consume_token(DATAINTERSECTIONOF);
    drB = DataRange();
                ranges.add(drA);
                ranges.add(drB);
        {if (true) return dataFactory.getOWLDataIntersectionOf(ranges);}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange DataUnionOf() throws ParseException {
    OWLDataRange drA;
    OWLDataRange drB;
    Set<OWLDataRange> ranges = new HashSet<OWLDataRange>();
    drA = DataRange();
    jj_consume_token(DATAUNIONOF);
    drB = DataRange();
                ranges.add(drA);
                ranges.add(drB);
        {if (true) return dataFactory.getOWLDataUnionOf(ranges);}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange DataComplementOf() throws ParseException {
    OWLDataRange rng;
    jj_consume_token(DATACOMPLEMENTOF);
    rng = DataRange();
        {if (true) return dataFactory.getOWLDataComplementOf(rng);}
    throw new Error("Missing return statement in function");
  }

  final public OWLFacetRestriction DataRangeFacetRestriction() throws ParseException {
    IRI iri;
    OWLLiteral con;
    iri = IRI();
    con = Literal();
        OWLFacet v = OWLFacet.getFacetByShortName(iri.getFragment());
        {if (true) return dataFactory.getOWLFacetRestriction(v, con);}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLFacetRestriction> DataRangeFacetRestrictionSet() throws ParseException {
    Set<OWLFacetRestriction> facetRestrictions = new HashSet<OWLFacetRestriction>();
    OWLFacetRestriction facetRestriction;
    jj_consume_token(OPENBRACE);
    facetRestriction = DataRangeFacetRestriction();
                                                               facetRestrictions.add(facetRestriction);
    label_8:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[25] = jj_gen;
        break label_8;
      }
      jj_consume_token(COMMA);
      facetRestriction = DataRangeFacetRestriction();
                                                                facetRestrictions.add(facetRestriction);
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return facetRestrictions;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataRange DataRangeRestriction() throws ParseException {
    OWLFacet v;
    OWLDatatype rng;
    OWLFacetRestriction facetRestriction;
    Set<OWLFacetRestriction> facetRestrictions;
    rng = DatatypeIRI();
    jj_consume_token(DATATYPERESTRICTION);
    facetRestrictions = DataRangeFacetRestrictionSet();
        {if (true) return dataFactory.getOWLDatatypeRestriction(rng, facetRestrictions);}
    throw new Error("Missing return statement in function");
  }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Annotation Stuff
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLAnnotation Annotation() throws ParseException {
    OWLAnnotationProperty prop;
    OWLAnnotationValue val;
    Set<OWLAnnotation> annos;
    jj_consume_token(ANNOTATION);
    jj_consume_token(OPENBRACE);
    prop = AnnotationPropertyIRI();
    jj_consume_token(COMMA);
    val = AnnotationValue();
    jj_consume_token(CLOSEBRACE);
    annos = AnnotationAnnotations();
        {if (true) return dataFactory.getOWLAnnotation(prop, val, annos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationProperty AnnotationPropertyIRI() throws ParseException {
    IRI iri;
    iri = IRI();
        {if (true) return dataFactory.getOWLAnnotationProperty(iri);}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLAnnotation> AnnotationAnnotations() throws ParseException {
    Set<OWLAnnotation> annos = null;
    OWLAnnotation anno = null;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENSQPAR:
      jj_consume_token(OPENSQPAR);
      anno = Annotation();
                if (annos == null) {
                        annos = new HashSet<OWLAnnotation>();
        }
        annos.add(anno);
      label_9:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case COMMA:
          ;
          break;
        default:
          jj_la1[26] = jj_gen;
          break label_9;
        }
        jj_consume_token(COMMA);
        anno = Annotation();
                                       annos.add(anno);
      }
      jj_consume_token(CLOSESQPAR);
      break;
    default:
      jj_la1[27] = jj_gen;
      ;
    }
                if (annos  == null) {
                        annos = Collections.emptySet();
        }
        {if (true) return annos;}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationValue AnnotationValue() throws ParseException {
    OWLAnnotationValue value;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      value = IRI();
      break;
    case NODEID:
      value = AnonymousIndividual();
      break;
    case STRINGLITERAL:
      value = Literal();
      break;
    default:
      jj_la1[28] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return value;}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLAnnotation> AxiomAnnotationSet() throws ParseException {
    Set<OWLAnnotation> annos = null;
    OWLAnnotation anno = null;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENSQPAR:
      jj_consume_token(OPENSQPAR);
      anno = Annotation();
                if (annos == null) {
                        annos = new HashSet<OWLAnnotation>();
        }
        annos.add(anno);
      label_10:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case COMMA:
          ;
          break;
        default:
          jj_la1[29] = jj_gen;
          break label_10;
        }
        jj_consume_token(COMMA);
        anno = Annotation();
                                       annos.add(anno);
      }
      jj_consume_token(CLOSESQPAR);
      break;
    default:
      jj_la1[30] = jj_gen;
      ;
    }
                if (annos  == null) {
                        annos = Collections.emptySet();
        }
        {if (true) return annos;}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnonymousIndividual AnonymousIndividual() throws ParseException {
    Token t;
    t = jj_consume_token(NODEID);
        String id = t.image.substring(2, t.image.length());
        {if (true) return dataFactory.getOWLAnonymousIndividual(id);}
    throw new Error("Missing return statement in function");
  }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Data Stuff
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLLiteral Literal() throws ParseException {
    boolean plain = true;
    String literal;
    OWLDatatype datatype = null;
    String lang = "";
    literal = QuotedString();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENSQPAR:
      jj_consume_token(OPENSQPAR);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case LANGIDENTIFIER:
        jj_consume_token(LANGIDENTIFIER);
        lang = LangTag();
        break;
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        datatype = DatatypeIRI();
                                      plain = false;
        break;
      default:
        jj_la1[31] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(CLOSESQPAR);
      break;
    default:
      jj_la1[32] = jj_gen;
      ;
    }
        if (plain) {
            {if (true) return dataFactory.getOWLLiteral(literal, lang);}
        } else {
            // a float value in this syntax has an extra 'f' or 'F' character that must be removed to make a valid OWL literal
            if (datatype.isFloat() && (literal.endsWith("f") || literal.endsWith("F"))
            && !(literal.endsWith("inf") || literal.endsWith("INF"))) {
                literal = literal.substring(0, literal.length() - 1);
            }
        {if (true) return dataFactory.getOWLLiteral(literal, datatype);}
        }
    throw new Error("Missing return statement in function");
  }

  final public String QuotedString() throws ParseException {
    Token t;
    t = jj_consume_token(STRINGLITERAL);
        String raw = t.image.substring(1, t.image.length() - 1);
        {if (true) return EscapeUtils.unescapeString(raw);}
    throw new Error("Missing return statement in function");
  }

  final public String LangTag() throws ParseException {
    String lang = "";
        Token t;
    t = jj_consume_token(PN_LOCAL);
                      lang += t.image;
        {if (true) return lang;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDatatype DatatypeIRI() throws ParseException {
    IRI iri;
    iri = IRI();
        {if (true) return dataFactory.getOWLDatatype(iri);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Axioms
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLAxiom Axiom() throws ParseException {
    OWLAxiom ax = null;
    if (jj_2_5(2147483647)) {
      ax = ClassAxiom();
    } else if (jj_2_6(2147483647)) {
      ax = ObjectPropertyAxiom();
    } else if (jj_2_7(2)) {
      ax = DataPropertyAxiom();
    } else if (jj_2_8(2147483647)) {
      ax = IndividualAxiom();
    } else if (jj_2_9(2)) {
      ax = HasKey();
    } else if (jj_2_10(2)) {
      ax = DatatypeDefinitionAxiom();
    } else if (jj_2_11(3)) {
      ax = AnnotationAxiom();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        ax = Declaration();
        break;
      default:
        jj_la1[33] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Class Axioms
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLClassAxiom ClassAxiom() throws ParseException {
    OWLClassAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENPAR:
    case SEQ_OBJECTINTERSECTIONOF:
    case SEQ_OBJECTUNIONOF:
    case OBJECTONEOF:
    case OBJECTSOMEVALUESFROM:
    case OBJECTALLVALUESFROM:
    case OBJECTHASVALUE:
    case OBJECTMINCARDINALITY:
    case OBJECTMAXCARDINALITY:
    case OBJECTEXACTCARDINALITY:
    case DATASOMEVALUESFROM:
    case DATAALLVALUESFROM:
    case DATAHASVALUE:
    case DATAMINCARDINALITY:
    case DATAMAXCARDINALITY:
    case DATAEXACTCARDINALITY:
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      ax = NonSequenceClassAxiom();
      break;
    case SEQ_EQUIVALENTCLASSES:
    case SEQ_DISJOINTCLASSES:
      ax = SequenceClassAxiom();
      break;
    default:
      jj_la1[34] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom NonSequenceClassAxiom() throws ParseException {
    OWLClassAxiom ax;
    if (jj_2_12(3)) {
      ax = SubClassOf();
    } else if (jj_2_13(3)) {
      ax = EquivalentClasses();
    } else if (jj_2_14(2)) {
      ax = DisjointClasses();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        ax = DisjointUnion();
        break;
      default:
        jj_la1[35] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom SubClassOf() throws ParseException {
    OWLClassExpression subClass;
    OWLClassExpression superClass;
    Set<OWLAnnotation> axiomAnnos;
    subClass = ClassExpression();
    jj_consume_token(SUBCLASSOF);
    superClass = ClassExpression();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLSubClassOfAxiom(subClass, superClass, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom EquivalentClasses() throws ParseException {
    OWLClassExpression operandA;
    OWLClassExpression operandB;
    Set<OWLClassExpression> classExpressions = new HashSet<OWLClassExpression>();
    Set<OWLAnnotation> axiomAnnos;
    operandA = ClassExpression();
    jj_consume_token(EQUIVALENTCLASSES);
    operandB = ClassExpression();
    axiomAnnos = AxiomAnnotationSet();
                classExpressions.add(operandA);
                classExpressions.add(operandB);
                {if (true) return dataFactory.getOWLEquivalentClassesAxiom(classExpressions, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom DisjointClasses() throws ParseException {
        OWLClassExpression operandA;
    OWLClassExpression operandB;
    Set<OWLClassExpression> classExpressions = new HashSet<OWLClassExpression>();
    Set<OWLAnnotation> axiomAnnos;
    operandA = ClassExpression();
    jj_consume_token(DISJOINTCLASSES);
    operandB = ClassExpression();
    axiomAnnos = AxiomAnnotationSet();
                classExpressions.add(operandA);
                classExpressions.add(operandB);
                {if (true) return dataFactory.getOWLDisjointClassesAxiom(classExpressions, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom DisjointUnion() throws ParseException {
    OWLClass cls;
    Set<OWLClassExpression> classExpressions;
    Set<OWLAnnotation> axiomAnnos;
    cls = ClassIRI();
    jj_consume_token(DISJOINTUNION);
    classExpressions = ClassExpressionSet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDisjointUnionAxiom(cls, classExpressions, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom SequenceClassAxiom() throws ParseException {
    OWLClassAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SEQ_EQUIVALENTCLASSES:
      ax = SequenceEquivalentClasses();
      break;
    case SEQ_DISJOINTCLASSES:
      ax = SequenceDisjointClasses();
      break;
    default:
      jj_la1[36] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom SequenceEquivalentClasses() throws ParseException {
    Set<OWLClassExpression> classExpressions;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_EQUIVALENTCLASSES);
    classExpressions = ClassExpressionSet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLEquivalentClassesAxiom(classExpressions, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLClassAxiom SequenceDisjointClasses() throws ParseException {
    Set<OWLClassExpression> classExpressions;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_DISJOINTCLASSES);
    classExpressions = ClassExpressionSet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDisjointClassesAxiom(classExpressions, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Object Property Axioms
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLPropertyAxiom ObjectPropertyAxiom() throws ParseException {
    OWLPropertyAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENPAR:
    case SUBOBJECTPROPERTYCHAIN:
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      ax = NonSequencePropertyAxiom();
      break;
    case SEQ_EQUIVALENTOBJECTPROPERTIES:
    case SEQ_DISJOINTOBJECTPROPERTIES:
      ax = SequencePropertyAxiom();
      break;
    default:
      jj_la1[37] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom NonSequencePropertyAxiom() throws ParseException {
    OWLPropertyAxiom ax;
    if (jj_2_15(2147483647)) {
      ax = SubObjectPropertyOf();
    } else if (jj_2_16(2147483647)) {
      ax = EquivalentObjectProperties();
    } else if (jj_2_17(2147483647)) {
      ax = DisjointObjectProperties();
    } else if (jj_2_18(2147483647)) {
      ax = ObjectPropertyRange();
    } else if (jj_2_19(2147483647)) {
      ax = ObjectPropertyDomain();
    } else if (jj_2_20(2147483647)) {
      ax = InverseObjectProperties();
    } else if (jj_2_21(2147483647)) {
      ax = FunctionalObjectProperty();
    } else if (jj_2_22(2147483647)) {
      ax = InverseFunctionalObjectProperty();
    } else if (jj_2_23(2147483647)) {
      ax = SymmetricObjectProperty();
    } else if (jj_2_24(2147483647)) {
      ax = AsymmetricObjectProperty();
    } else if (jj_2_25(2147483647)) {
      ax = ReflexiveObjectProperty();
    } else if (jj_2_26(2147483647)) {
      ax = IrreflexiveObjectProperty();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case OPENPAR:
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        ax = TransitiveObjectProperty();
        break;
      default:
        jj_la1[38] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public List<OWLObjectPropertyExpression> ChainedObjectPropertyList() throws ParseException {
    OWLObjectPropertyExpression prop;
    List<OWLObjectPropertyExpression> props = new ArrayList<OWLObjectPropertyExpression>();
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
                                                      props.add(prop);
    label_11:
    while (true) {
      jj_consume_token(COMMA);
      prop = ObjectPropertyExpression();
                                                   props.add(prop);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[39] = jj_gen;
        break label_11;
      }
    }
    jj_consume_token(CLOSEBRACE);
                {if (true) return props;}
    throw new Error("Missing return statement in function");
  }

  final public List<OWLObjectPropertyExpression> SubObjectPropertyChain() throws ParseException {
    List<OWLObjectPropertyExpression> props;
    jj_consume_token(SUBOBJECTPROPERTYCHAIN);
    props = ChainedObjectPropertyList();
        {if (true) return props;}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SubObjectPropertyOf() throws ParseException {
    OWLObjectPropertyExpression subProperty = null;
    List<OWLObjectPropertyExpression> chain = null;
    OWLObjectPropertyExpression superProperty = null;
    Set<OWLAnnotation> axiomAnnos;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENPAR:
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      subProperty = ObjectPropertyExpression();
      break;
    case SUBOBJECTPROPERTYCHAIN:
      chain = SubObjectPropertyChain();
      break;
    default:
      jj_la1[40] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SUBOBJECTPROPERTYOF);
    superProperty = ObjectPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
                if (subProperty != null) {
            {if (true) return dataFactory.getOWLSubObjectPropertyOfAxiom(subProperty, superProperty, axiomAnnos);}
        } else if (chain != null) {
            {if (true) return dataFactory.getOWLSubPropertyChainOfAxiom(chain, superProperty, axiomAnnos);}
        } else {
            {if (true) return null;}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom EquivalentObjectProperties() throws ParseException {
        OWLObjectPropertyExpression propA;
        OWLObjectPropertyExpression propB;
    Set<OWLObjectPropertyExpression> props = new HashSet<OWLObjectPropertyExpression>();
    Set<OWLAnnotation> axiomAnnos;
    propA = ObjectPropertyExpression();
    jj_consume_token(EQUIVALENTOBJECTPROPERTIES);
    propB = ObjectPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
                props.add(propA);
                props.add(propB);
        {if (true) return dataFactory.getOWLEquivalentObjectPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom DisjointObjectProperties() throws ParseException {
    OWLObjectPropertyExpression propA;
        OWLObjectPropertyExpression propB;
    Set<OWLObjectPropertyExpression> props = new HashSet<OWLObjectPropertyExpression>();
    Set<OWLAnnotation> axiomAnnos;
    propA = ObjectPropertyExpression();
    jj_consume_token(DISJOINTOBJECTPROPERTIES);
    propB = ObjectPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
                props.add(propA);
                props.add(propB);
        {if (true) return dataFactory.getOWLDisjointObjectPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom ObjectPropertyRange() throws ParseException {
    OWLObjectPropertyExpression prop;
    OWLClassExpression range;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(OBJECTPROPERTYRANGE);
    range = ClassExpression();
    axiomAnnos = AxiomAnnotationSet();
                {if (true) return dataFactory.getOWLObjectPropertyRangeAxiom(prop, range, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom ObjectPropertyDomain() throws ParseException {
    OWLObjectPropertyExpression prop;
    OWLClassExpression desc;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(OBJECTPROPERTYDOMAIN);
    desc = ClassExpression();
    axiomAnnos = AxiomAnnotationSet();
                {if (true) return dataFactory.getOWLObjectPropertyDomainAxiom(prop, desc, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom InverseObjectProperties() throws ParseException {
    OWLObjectPropertyExpression propA;
    OWLObjectPropertyExpression propB;
    Set<OWLAnnotation> axiomAnnos;
    propA = ObjectPropertyExpression();
    jj_consume_token(INVERSEOBJECTPROPERTIES);
    propB = ObjectPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLInverseObjectPropertiesAxiom(propA, propB, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom FunctionalObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos = Collections.emptySet();
    prop = ObjectPropertyExpression();
    jj_consume_token(FUNCTIONALOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLFunctionalObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom InverseFunctionalObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(INVERSEFUNCTIONALOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLInverseFunctionalObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SymmetricObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(SYMMETRICOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLSymmetricObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom AsymmetricObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(ASYMMETRICOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLAsymmetricObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom ReflexiveObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(REFLEXIVEOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLReflexiveObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom IrreflexiveObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(IRREFLEXIVEOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLIrreflexiveObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom TransitiveObjectProperty() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(TRANSITIVEOBJECTPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLTransitiveObjectPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SequencePropertyAxiom() throws ParseException {
    OWLPropertyAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SEQ_EQUIVALENTOBJECTPROPERTIES:
      ax = SequenceEquivalentObjectProperties();
      break;
    case SEQ_DISJOINTOBJECTPROPERTIES:
      ax = SequenceDisjointObjectProperties();
      break;
    default:
      jj_la1[41] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLObjectPropertyExpression> ObjectPropertySet() throws ParseException {
    OWLObjectPropertyExpression prop;
    Set<OWLObjectPropertyExpression> props = new HashSet<OWLObjectPropertyExpression>();
    jj_consume_token(OPENBRACE);
    prop = ObjectPropertyExpression();
                                                      props.add(prop);
    label_12:
    while (true) {
      jj_consume_token(COMMA);
      prop = ObjectPropertyExpression();
                                                   props.add(prop);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[42] = jj_gen;
        break label_12;
      }
    }
    jj_consume_token(CLOSEBRACE);
                {if (true) return props;}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SequenceEquivalentObjectProperties() throws ParseException {
    Set<OWLObjectPropertyExpression> props = null;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_EQUIVALENTOBJECTPROPERTIES);
    props = ObjectPropertySet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLEquivalentObjectPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SequenceDisjointObjectProperties() throws ParseException {
    Set<OWLObjectPropertyExpression> props;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_DISJOINTOBJECTPROPERTIES);
    props = ObjectPropertySet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDisjointObjectPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Data Property Axioms
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLPropertyAxiom DataPropertyAxiom() throws ParseException {
    OWLPropertyAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      ax = NonSequenceDataPropertyAxiom();
      break;
    case SEQ_EQUIVALENTDATAPROPERTIES:
    case SEQ_DISJOINTDATAPROPERTIES:
      ax = SequenceDataPropertyAxiom();
      break;
    default:
      jj_la1[43] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom NonSequenceDataPropertyAxiom() throws ParseException {
    OWLPropertyAxiom ax;
    if (jj_2_27(2)) {
      ax = SubDataPropertyOf();
    } else if (jj_2_28(2)) {
      ax = EquivalentDataProperties();
    } else if (jj_2_29(2)) {
      ax = DisjointDataProperties();
    } else if (jj_2_30(2)) {
      ax = DataPropertyRange();
    } else if (jj_2_31(2)) {
      ax = DataPropertyDomain();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        ax = FunctionalDataProperty();
        break;
      default:
        jj_la1[44] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SubDataPropertyOf() throws ParseException {
    OWLDataPropertyExpression subProperty;
    OWLDataPropertyExpression superProperty;
    Set<OWLAnnotation> axiomAnnos;
    subProperty = DataPropertyExpression();
    jj_consume_token(SUBDATAPROPERTYOF);
    superProperty = DataPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLSubDataPropertyOfAxiom(subProperty, superProperty, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom EquivalentDataProperties() throws ParseException {
        OWLDataPropertyExpression propA;
        OWLDataPropertyExpression propB;
    Set<OWLDataPropertyExpression> props = new HashSet<OWLDataPropertyExpression>();
    Set<OWLAnnotation> axiomAnnos;
    propA = DataPropertyExpression();
    jj_consume_token(EQUIVALENTDATAPROPERTIES);
    propB = DataPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
                props.add(propA);
                props.add(propB);
        {if (true) return dataFactory.getOWLEquivalentDataPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom DisjointDataProperties() throws ParseException {
    OWLDataPropertyExpression propA;
        OWLDataPropertyExpression propB;
    Set<OWLDataPropertyExpression> props = new HashSet<OWLDataPropertyExpression>();;
    Set<OWLAnnotation> axiomAnnos;
    propA = DataPropertyExpression();
    jj_consume_token(DISJOINTDATAPROPERTIES);
    propB = DataPropertyExpression();
    axiomAnnos = AxiomAnnotationSet();
                props.add(propA);
                props.add(propB);
        {if (true) return dataFactory.getOWLDisjointDataPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom DataPropertyRange() throws ParseException {
    OWLDataPropertyExpression prop;
    OWLDataRange rng;
    Set<OWLAnnotation> axiomAnnos;
    prop = DataPropertyExpression();
    jj_consume_token(DATAPROPERTYRANGE);
    rng = DataRange();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDataPropertyRangeAxiom(prop, rng, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom DataPropertyDomain() throws ParseException {
    OWLDataPropertyExpression prop;
    OWLClassExpression domain;
    Set<OWLAnnotation> axiomAnnos;
    prop = DataPropertyExpression();
    jj_consume_token(DATAPROPERTYDOMAIN);
    domain = ClassExpression();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDataPropertyDomainAxiom(prop, domain, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom FunctionalDataProperty() throws ParseException {
    OWLDataPropertyExpression prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = DataPropertyExpression();
    jj_consume_token(FUNCTIONALDATAPROPERTY);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLFunctionalDataPropertyAxiom(prop, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SequenceDataPropertyAxiom() throws ParseException {
    OWLPropertyAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SEQ_EQUIVALENTDATAPROPERTIES:
      ax = SequenceEquivalentDataProperties();
      break;
    case SEQ_DISJOINTDATAPROPERTIES:
      ax = SequenceDisjointDataProperties();
      break;
    default:
      jj_la1[45] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLDataPropertyExpression> DataPropertySet() throws ParseException {
    OWLDataPropertyExpression prop;
    Set<OWLDataPropertyExpression> props = new HashSet<OWLDataPropertyExpression>();
    jj_consume_token(OPENBRACE);
    prop = DataPropertyExpression();
                                                props.add(prop);
    label_13:
    while (true) {
      jj_consume_token(COMMA);
      prop = DataPropertyExpression();
                                                 props.add(prop);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[46] = jj_gen;
        break label_13;
      }
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return props;}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SequenceEquivalentDataProperties() throws ParseException {
    Set<OWLDataPropertyExpression> props;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_EQUIVALENTDATAPROPERTIES);
    props = DataPropertySet();
    axiomAnnos = AxiomAnnotationSet();
                {if (true) return dataFactory.getOWLEquivalentDataPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLPropertyAxiom SequenceDisjointDataProperties() throws ParseException {
    Set<OWLDataPropertyExpression> props;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_DISJOINTDATAPROPERTIES);
    props = DataPropertySet();
    axiomAnnos = AxiomAnnotationSet();
                {if (true) return dataFactory.getOWLDisjointDataPropertiesAxiom(props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Individual Axioms
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLIndividualAxiom IndividualAxiom() throws ParseException {
    OWLIndividualAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENPAR:
    case NOT:
    case SEQ_OBJECTINTERSECTIONOF:
    case SEQ_OBJECTUNIONOF:
    case OBJECTONEOF:
    case OBJECTSOMEVALUESFROM:
    case OBJECTALLVALUESFROM:
    case OBJECTHASVALUE:
    case OBJECTMINCARDINALITY:
    case OBJECTMAXCARDINALITY:
    case OBJECTEXACTCARDINALITY:
    case DATASOMEVALUESFROM:
    case DATAALLVALUESFROM:
    case DATAHASVALUE:
    case DATAMINCARDINALITY:
    case DATAMAXCARDINALITY:
    case DATAEXACTCARDINALITY:
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
    case NODEID:
      ax = NonSequenceIndividualAxiom();
      break;
    case SEQ_SAMEINDIVIDUAL:
    case SEQ_DIFFERENTINDIVIDUALS:
      ax = SequenceIndividualAxiom();
      break;
    default:
      jj_la1[47] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom NonSequenceIndividualAxiom() throws ParseException {
    OWLIndividualAxiom ax;
    if (jj_2_32(2)) {
      ax = SameIndividuals();
    } else if (jj_2_33(2)) {
      ax = DifferentIndividuals();
    } else if (jj_2_34(2147483647)) {
      ax = ClassAssertion();
    } else if (jj_2_35(2147483647)) {
      ax = ObjectPropertyAssertion();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        ax = DataPropertyAssertion();
        break;
      default:
        jj_la1[48] = jj_gen;
        if (jj_2_36(2147483647)) {
          ax = NegativeObjectPropertyAssertion();
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case NOT:
            ax = NegativeDataPropertyAssertion();
            break;
          default:
            jj_la1[49] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom SameIndividuals() throws ParseException {
        OWLIndividual individualA;
        OWLIndividual individualB;
    Set<OWLIndividual> individuals = new HashSet<OWLIndividual>();
    Set<OWLAnnotation> axiomAnnos;
    individualA = Individual();
    jj_consume_token(SAMEINDIVIDUAL);
    individualB = Individual();
    axiomAnnos = AxiomAnnotationSet();
                individuals.add(individualA);
                individuals.add(individualB);
        {if (true) return dataFactory.getOWLSameIndividualAxiom(individuals, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom DifferentIndividuals() throws ParseException {
        OWLIndividual individualA;
        OWLIndividual individualB;
    Set<OWLIndividual> individuals = new HashSet<OWLIndividual>();
    Set<OWLAnnotation> axiomAnnos;
    individualA = Individual();
    jj_consume_token(DIFFERENTINDIVIDUALS);
    individualB = Individual();
    axiomAnnos = AxiomAnnotationSet();
                individuals.add(individualA);
                individuals.add(individualB);
        {if (true) return dataFactory.getOWLDifferentIndividualsAxiom(individuals, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom ClassAssertion() throws ParseException {
    OWLIndividual ind;
    OWLClassExpression desc;
    Set<OWLAnnotation> axiomAnnos;
    desc = ClassExpression();
    jj_consume_token(OPENPAR);
    ind = Individual();
    jj_consume_token(CLOSEPAR);
    axiomAnnos = AxiomAnnotationSet();
      {if (true) return dataFactory.getOWLClassAssertionAxiom(desc, ind, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom ObjectPropertyAssertion() throws ParseException {
    OWLIndividual subj;
    OWLObjectPropertyExpression prop;
    OWLIndividual obj;
    Set<OWLAnnotation> axiomAnnos;
    prop = ObjectPropertyExpression();
    jj_consume_token(OPENPAR);
    subj = Individual();
    jj_consume_token(COMMA);
    obj = Individual();
    jj_consume_token(CLOSEPAR);
    axiomAnnos = AxiomAnnotationSet();
      {if (true) return dataFactory.getOWLObjectPropertyAssertionAxiom(prop, subj, obj, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom DataPropertyAssertion() throws ParseException {
    OWLIndividual subj;
    OWLDataPropertyExpression prop;
    OWLLiteral obj;
    Set<OWLAnnotation> axiomAnnos;
    prop = DataPropertyExpression();
    jj_consume_token(OPENPAR);
    subj = Individual();
    jj_consume_token(COMMA);
    obj = Literal();
    jj_consume_token(CLOSEPAR);
    axiomAnnos = AxiomAnnotationSet();
      {if (true) return dataFactory.getOWLDataPropertyAssertionAxiom(prop, subj, obj, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom NegativeObjectPropertyAssertion() throws ParseException {
    OWLIndividual subj;
    OWLObjectPropertyExpression prop;
    OWLIndividual obj;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(NOT);
    prop = ObjectPropertyExpression();
    jj_consume_token(OPENPAR);
    subj = Individual();
    jj_consume_token(COMMA);
    obj = Individual();
    jj_consume_token(CLOSEPAR);
    axiomAnnos = AxiomAnnotationSet();
      {if (true) return dataFactory.getOWLNegativeObjectPropertyAssertionAxiom(prop, subj, obj, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom NegativeDataPropertyAssertion() throws ParseException {
    OWLIndividual subj;
    OWLDataPropertyExpression prop;
    OWLLiteral obj;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(NOT);
    prop = DataPropertyExpression();
    jj_consume_token(OPENPAR);
    subj = Individual();
    jj_consume_token(COMMA);
    obj = Literal();
    jj_consume_token(CLOSEPAR);
    axiomAnnos = AxiomAnnotationSet();
      {if (true) return dataFactory.getOWLNegativeDataPropertyAssertionAxiom(prop, subj, obj, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom SequenceIndividualAxiom() throws ParseException {
    OWLIndividualAxiom ax;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SEQ_SAMEINDIVIDUAL:
      ax = SequenceSameIndividuals();
      break;
    case SEQ_DIFFERENTINDIVIDUALS:
      ax = SequenceDifferentIndividuals();
      break;
    default:
      jj_la1[50] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return ax;}
    throw new Error("Missing return statement in function");
  }

  final public Set<OWLIndividual> IndividualSet() throws ParseException {
    OWLIndividual ind;
    Set<OWLIndividual> individuals = new HashSet<OWLIndividual>();
    jj_consume_token(OPENBRACE);
    ind = Individual();
                                   individuals.add(ind);
    label_14:
    while (true) {
      jj_consume_token(COMMA);
      ind = Individual();
                                    individuals.add(ind);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case COMMA:
        ;
        break;
      default:
        jj_la1[51] = jj_gen;
        break label_14;
      }
    }
    jj_consume_token(CLOSEBRACE);
        {if (true) return individuals;}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom SequenceSameIndividuals() throws ParseException {
    Set<OWLIndividual> individuals;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_SAMEINDIVIDUAL);
    individuals = IndividualSet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLSameIndividualAxiom(individuals, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLIndividualAxiom SequenceDifferentIndividuals() throws ParseException {
    Set<OWLIndividual> individuals;
    Set<OWLAnnotation> axiomAnnos;
    jj_consume_token(SEQ_DIFFERENTINDIVIDUALS);
    individuals = IndividualSet();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDifferentIndividualsAxiom(individuals, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Annotation axioms
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLAxiom AnnotationAxiom() throws ParseException {
    OWLAxiom axiom;
    if (jj_2_37(2)) {
      axiom = AnnotationAssertion();
    } else if (jj_2_38(2)) {
      axiom = SubAnnotationPropertyOf();
    } else if (jj_2_39(2)) {
      axiom = AnnotationPropertyDomain();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        axiom = AnnotationPropertyRange();
        break;
      default:
        jj_la1[52] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return axiom;}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationSubject AnnotationSubject() throws ParseException {
    OWLAnnotationSubject subj;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      subj = IRI();
      break;
    case NODEID:
      subj = AnonymousIndividual();
      break;
    default:
      jj_la1[53] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
        {if (true) return subj;}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationAssertionAxiom AnnotationAssertion() throws ParseException {
    OWLAnnotationProperty prop;
    OWLAnnotationSubject subj;
    OWLAnnotationValue val;
    Set<OWLAnnotation> axiomAnnos;
    subj = AnnotationSubject();
    jj_consume_token(ANNOTATION);
    jj_consume_token(OPENBRACE);
    prop = AnnotationPropertyIRI();
    jj_consume_token(COMMA);
    val = AnnotationValue();
    jj_consume_token(CLOSEBRACE);
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLAnnotationAssertionAxiom(prop, subj, val, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLSubAnnotationPropertyOfAxiom SubAnnotationPropertyOf() throws ParseException {
    OWLAnnotationProperty subProp;
    OWLAnnotationProperty superProperty;
    Set<OWLAnnotation> axiomAnnos;
    subProp = AnnotationPropertyIRI();
    jj_consume_token(SUBANNOTATIONPROPERTYOF);
    superProperty = AnnotationPropertyIRI();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLSubAnnotationPropertyOfAxiom(subProp, superProperty, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationPropertyDomainAxiom AnnotationPropertyDomain() throws ParseException {
    IRI domain;
    OWLAnnotationProperty prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = AnnotationPropertyIRI();
    jj_consume_token(ANNOTATIONPROPERTYDOMAIN);
    domain = IRI();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLAnnotationPropertyDomainAxiom(prop, domain, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationPropertyRangeAxiom AnnotationPropertyRange() throws ParseException {
    IRI range;
    OWLAnnotationProperty prop;
    Set<OWLAnnotation> axiomAnnos;
    prop = AnnotationPropertyIRI();
    jj_consume_token(ANNOTATIONPROPERTYRANGE);
    range = IRI();
    axiomAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLAnnotationPropertyRangeAxiom(prop, range, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Keys
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLHasKeyAxiom HasKey() throws ParseException {
    OWLClassExpression ce;
    OWLPropertyExpression<?,?> prop;
    Set<OWLPropertyExpression<?,?>> props = new HashSet<OWLPropertyExpression<?,?>>();
    Set<OWLAnnotation> axiomAnnos;
    ce = ClassExpression();
    jj_consume_token(HASKEY);
    jj_consume_token(OPENBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OPENPAR:
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      prop = ObjectPropertyExpression();
                                                   props.add(prop);
      label_15:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case COMMA:
          ;
          break;
        default:
          jj_la1[54] = jj_gen;
          break label_15;
        }
        jj_consume_token(COMMA);
        prop = ObjectPropertyExpression();
                                              props.add(prop);
      }
      break;
    default:
      jj_la1[55] = jj_gen;
      ;
    }
    jj_consume_token(CLOSEBRACE);
    jj_consume_token(OPENBRACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FULLIRI:
    case PN_LOCAL:
    case PNAME_LN:
      prop = DataPropertyExpression();
                                                     props.add(prop);
      label_16:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case COMMA:
          ;
          break;
        default:
          jj_la1[56] = jj_gen;
          break label_16;
        }
        jj_consume_token(COMMA);
        prop = DataPropertyExpression();
                                                props.add(prop);
      }
      break;
    default:
      jj_la1[57] = jj_gen;
      ;
    }
    jj_consume_token(CLOSEBRACE);
    axiomAnnos = AxiomAnnotationSet();
      {if (true) return dataFactory.getOWLHasKeyAxiom(ce, props, axiomAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Datatype Definition
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLDatatypeDefinitionAxiom DatatypeDefinitionAxiom() throws ParseException {
    OWLDatatype datatype;
    OWLDataRange dr;
    Set<OWLAnnotation> axAnnos;
    datatype = DatatypeIRI();
    jj_consume_token(DATATYPEDEFINITION);
    dr = DataRange();
    axAnnos = AxiomAnnotationSet();
        {if (true) return dataFactory.getOWLDatatypeDefinitionAxiom(datatype, dr, axAnnos);}
    throw new Error("Missing return statement in function");
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Declaration Axiom
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////
  final public OWLAxiom Declaration() throws ParseException {
        OWLEntity entity = null;
    IRI iri = null;
    OWLLiteral con = null;
    Set<OWLAnnotation> axiomAnnos;
    entity = Entity();
    axiomAnnos = AxiomAnnotationSet();
                if (ignoreAnnotationsAndDeclarations) {
                        {if (true) return null;}
        } else {
                        {if (true) return dataFactory.getOWLDeclarationAxiom(entity, axiomAnnos);}
        }
    throw new Error("Missing return statement in function");
  }

  final public OWLEntity Entity() throws ParseException {
    OWLEntity entity;
    if (jj_2_40(2)) {
      entity = Class();
    } else if (jj_2_41(2)) {
      entity = ObjectProperty();
    } else if (jj_2_42(2)) {
      entity = DataProperty();
    } else if (jj_2_43(2)) {
      entity = NamedIndividual();
    } else if (jj_2_44(2)) {
      entity = Datatype();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FULLIRI:
      case PN_LOCAL:
      case PNAME_LN:
        entity = AnnotationProperty();
        break;
      default:
        jj_la1[58] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        {if (true) return entity;}
    throw new Error("Missing return statement in function");
  }

  final public OWLClass Class() throws ParseException {
    OWLClass cls;
    cls = ClassIRI();
    jj_consume_token(CLASS);
        {if (true) return cls;}
    throw new Error("Missing return statement in function");
  }

  final public OWLObjectProperty ObjectProperty() throws ParseException {
    OWLObjectProperty prop;
    prop = ObjectPropertyIRI();
    jj_consume_token(OBJECTPROP);
        {if (true) return prop;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDataProperty DataProperty() throws ParseException {
    OWLDataProperty prop;
    prop = DataPropertyIRI();
    jj_consume_token(DATAPROP);
        {if (true) return prop;}
    throw new Error("Missing return statement in function");
  }

  final public OWLNamedIndividual NamedIndividual() throws ParseException {
    OWLNamedIndividual ind;
    ind = IndividualIRI();
    jj_consume_token(NAMEDINDIVIDUAL);
                {if (true) return ind;}
    throw new Error("Missing return statement in function");
  }

  final public OWLDatatype Datatype() throws ParseException {
    OWLDatatype dt;
    dt = DatatypeIRI();
    jj_consume_token(DATATYPE);
                {if (true) return dt;}
    throw new Error("Missing return statement in function");
  }

  final public OWLAnnotationProperty AnnotationProperty() throws ParseException {
    OWLAnnotationProperty prop;
    prop = AnnotationPropertyIRI();
    jj_consume_token(ANNOTATION);
        {if (true) return prop;}
    throw new Error("Missing return statement in function");
  }

  private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_22(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_23(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_24(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_25(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_26(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_27(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_28(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_29(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_30(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_2_31(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_31(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private boolean jj_2_32(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_32(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private boolean jj_2_33(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_33(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private boolean jj_2_34(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_34(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private boolean jj_2_35(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_35(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private boolean jj_2_36(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_36(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private boolean jj_2_37(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_37(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private boolean jj_2_38(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_38(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private boolean jj_2_39(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_39(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private boolean jj_2_40(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_40(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private boolean jj_2_41(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_41(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private boolean jj_2_42(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_42(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private boolean jj_2_43(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_43(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private boolean jj_2_44(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_44(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private boolean jj_3R_139() {
    if (jj_3R_186()) return true;
    return false;
  }

  private boolean jj_3R_138() {
    if (jj_3R_52()) return true;
    return false;
  }

  private boolean jj_3R_147() {
    if (jj_scan_token(ANNOTATION)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_81()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_192()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_3R_193()) return true;
    return false;
  }

  private boolean jj_3R_137() {
    if (jj_3R_185()) return true;
    return false;
  }

  private boolean jj_3R_32() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(EQUIVALENTOBJECTPROPERTIES)) return true;
    if (jj_3R_76()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_136() {
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_135() {
    if (jj_3R_50()) return true;
    return false;
  }

  private boolean jj_3_33() {
    if (jj_3R_49()) return true;
    return false;
  }

  private boolean jj_3R_228() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_62()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3_32() {
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3R_200() {
    if (jj_scan_token(OBJECTMINCARDINALITY)) return true;
    if (jj_3R_227()) return true;
    if (jj_scan_token(CLOSESQPAR)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_228()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_98() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_32()) {
    jj_scanpos = xsp;
    if (jj_3_33()) {
    jj_scanpos = xsp;
    if (jj_3R_135()) {
    jj_scanpos = xsp;
    if (jj_3R_136()) {
    jj_scanpos = xsp;
    if (jj_3R_137()) {
    jj_scanpos = xsp;
    if (jj_3R_138()) {
    jj_scanpos = xsp;
    if (jj_3R_139()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_60() {
    if (jj_3R_72()) return true;
    if (jj_scan_token(DATATYPE)) return true;
    return false;
  }

  private boolean jj_3R_70() {
    if (jj_3R_98()) return true;
    return false;
  }

  private boolean jj_3R_24() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_70()) {
    jj_scanpos = xsp;
    if (jj_3R_71()) return true;
    }
    return false;
  }

  private boolean jj_3R_244() {
    if (jj_scan_token(INT)) return true;
    return false;
  }

  private boolean jj_3R_215() {
    if (jj_3R_72()) return true;
    if (jj_scan_token(DATATYPERESTRICTION)) return true;
    if (jj_3R_236()) return true;
    return false;
  }

  private boolean jj_3R_74() {
    if (jj_3R_76()) return true;
    return false;
  }

  private boolean jj_3R_31() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_74()) {
    jj_scanpos = xsp;
    if (jj_3R_75()) return true;
    }
    if (jj_scan_token(SUBOBJECTPROPERTYOF)) return true;
    if (jj_3R_76()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_59() {
    if (jj_3R_85()) return true;
    if (jj_scan_token(NAMEDINDIVIDUAL)) return true;
    return false;
  }

  private boolean jj_3R_134() {
    if (jj_3R_184()) return true;
    return false;
  }

  private boolean jj_3R_248() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_247()) return true;
    return false;
  }

  private boolean jj_3R_227() {
    if (jj_3R_244()) return true;
    return false;
  }

  private boolean jj_3R_236() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_247()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_248()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_184() {
    if (jj_scan_token(SEQ_DISJOINTDATAPROPERTIES)) return true;
    if (jj_3R_219()) return true;
    return false;
  }

  private boolean jj_3R_102() {
    if (jj_scan_token(SUBOBJECTPROPERTYCHAIN)) return true;
    if (jj_3R_145()) return true;
    return false;
  }

  private boolean jj_3R_58() {
    if (jj_3R_84()) return true;
    if (jj_scan_token(DATAPROP)) return true;
    return false;
  }

  private boolean jj_3R_199() {
    if (jj_scan_token(OBJECTHASVALUE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_191() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_76()) return true;
    return false;
  }

  private boolean jj_3_26() {
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3R_247() {
    if (jj_3R_100()) return true;
    if (jj_3R_220()) return true;
    return false;
  }

  private boolean jj_3R_145() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    Token xsp;
    if (jj_3R_191()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_191()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3_25() {
    if (jj_3R_41()) return true;
    return false;
  }

  private boolean jj_3_24() {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3_23() {
    if (jj_3R_39()) return true;
    return false;
  }

  private boolean jj_3R_67() {
    if (jj_3R_95()) return true;
    return false;
  }

  private boolean jj_3_22() {
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_183() {
    if (jj_scan_token(SEQ_EQUIVALENTDATAPROPERTIES)) return true;
    if (jj_3R_219()) return true;
    return false;
  }

  private boolean jj_3_21() {
    if (jj_3R_37()) return true;
    return false;
  }

  private boolean jj_3_20() {
    if (jj_3R_36()) return true;
    return false;
  }

  private boolean jj_3R_57() {
    if (jj_3R_83()) return true;
    if (jj_scan_token(OBJECTPROP)) return true;
    return false;
  }

  private boolean jj_3_19() {
    if (jj_3R_35()) return true;
    return false;
  }

  private boolean jj_3_18() {
    if (jj_3R_34()) return true;
    return false;
  }

  private boolean jj_3R_198() {
    if (jj_scan_token(OBJECTALLVALUESFROM)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_62()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3_17() {
    if (jj_3R_33()) return true;
    return false;
  }

  private boolean jj_3R_129() {
    if (jj_3R_179()) return true;
    return false;
  }

  private boolean jj_3_16() {
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3R_152() {
    if (jj_3R_196()) return true;
    return false;
  }

  private boolean jj_3R_128() {
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3R_127() {
    if (jj_3R_41()) return true;
    return false;
  }

  private boolean jj_3R_126() {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_125() {
    if (jj_3R_39()) return true;
    return false;
  }

  private boolean jj_3R_124() {
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3_15() {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_216() {
    if (jj_scan_token(DATACOMPLEMENTOF)) return true;
    if (jj_3R_63()) return true;
    return false;
  }

  private boolean jj_3R_123() {
    if (jj_3R_37()) return true;
    return false;
  }

  private boolean jj_3R_56() {
    if (jj_3R_82()) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }

  private boolean jj_3R_219() {
    if (jj_scan_token(OPENBRACE)) return true;
    return false;
  }

  private boolean jj_3R_122() {
    if (jj_3R_36()) return true;
    return false;
  }

  private boolean jj_3R_158() {
    if (jj_3R_202()) return true;
    return false;
  }

  private boolean jj_3R_121() {
    if (jj_3R_35()) return true;
    return false;
  }

  private boolean jj_3R_120() {
    if (jj_3R_34()) return true;
    return false;
  }

  private boolean jj_3R_197() {
    if (jj_scan_token(OBJECTSOMEVALUESFROM)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_62()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_164() {
    if (jj_3R_208()) return true;
    return false;
  }

  private boolean jj_3R_155() {
    if (jj_3R_199()) return true;
    return false;
  }

  private boolean jj_3R_119() {
    if (jj_3R_33()) return true;
    return false;
  }

  private boolean jj_3R_118() {
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3_44() {
    if (jj_3R_60()) return true;
    return false;
  }

  private boolean jj_3R_161() {
    if (jj_3R_205()) return true;
    return false;
  }

  private boolean jj_3_42() {
    if (jj_3R_58()) return true;
    return false;
  }

  private boolean jj_3R_117() {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3_43() {
    if (jj_3R_59()) return true;
    return false;
  }

  private boolean jj_3R_133() {
    if (jj_3R_183()) return true;
    return false;
  }

  private boolean jj_3R_20() {
    if (jj_3R_63()) return true;
    if (jj_scan_token(DATAUNIONOF)) return true;
    if (jj_3R_63()) return true;
    return false;
  }

  private boolean jj_3R_94() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_117()) {
    jj_scanpos = xsp;
    if (jj_3R_118()) {
    jj_scanpos = xsp;
    if (jj_3R_119()) {
    jj_scanpos = xsp;
    if (jj_3R_120()) {
    jj_scanpos = xsp;
    if (jj_3R_121()) {
    jj_scanpos = xsp;
    if (jj_3R_122()) {
    jj_scanpos = xsp;
    if (jj_3R_123()) {
    jj_scanpos = xsp;
    if (jj_3R_124()) {
    jj_scanpos = xsp;
    if (jj_3R_125()) {
    jj_scanpos = xsp;
    if (jj_3R_126()) {
    jj_scanpos = xsp;
    if (jj_3R_127()) {
    jj_scanpos = xsp;
    if (jj_3R_128()) {
    jj_scanpos = xsp;
    if (jj_3R_129()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_97() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_133()) {
    jj_scanpos = xsp;
    if (jj_3R_134()) return true;
    }
    return false;
  }

  private boolean jj_3_41() {
    if (jj_3R_57()) return true;
    return false;
  }

  private boolean jj_3_40() {
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_196() {
    if (jj_scan_token(OBJECTONEOF)) return true;
    if (jj_3R_226()) return true;
    return false;
  }

  private boolean jj_3R_243() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_79()) return true;
    return false;
  }

  private boolean jj_3R_66() {
    if (jj_3R_94()) return true;
    return false;
  }

  private boolean jj_3R_22() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_66()) {
    jj_scanpos = xsp;
    if (jj_3R_67()) return true;
    }
    return false;
  }

  private boolean jj_3_4() {
    if (jj_3R_20()) return true;
    return false;
  }

  private boolean jj_3R_182() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(FUNCTIONALDATAPROPERTY)) return true;
    return false;
  }

  private boolean jj_3R_226() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_79()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_243()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_19() {
    if (jj_3R_63()) return true;
    if (jj_scan_token(DATAINTERSECTIONOF)) return true;
    if (jj_3R_63()) return true;
    return false;
  }

  private boolean jj_3R_151() {
    if (jj_3R_195()) return true;
    return false;
  }

  private boolean jj_3_3() {
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3R_163() {
    if (jj_3R_207()) return true;
    return false;
  }

  private boolean jj_3R_157() {
    if (jj_3R_201()) return true;
    return false;
  }

  private boolean jj_3R_173() {
    if (jj_3R_20()) return true;
    return false;
  }

  private boolean jj_3R_160() {
    if (jj_3R_204()) return true;
    return false;
  }

  private boolean jj_3R_154() {
    if (jj_3R_198()) return true;
    return false;
  }

  private boolean jj_3R_47() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(DATAPROPERTYDOMAIN)) return true;
    return false;
  }

  private boolean jj_3R_175() {
    if (jj_3R_216()) return true;
    return false;
  }

  private boolean jj_3R_195() {
    if (jj_scan_token(SEQ_OBJECTUNIONOF)) return true;
    if (jj_3R_217()) return true;
    return false;
  }

  private boolean jj_3R_174() {
    if (jj_3R_215()) return true;
    return false;
  }

  private boolean jj_3R_178() {
    if (jj_scan_token(SEQ_DISJOINTCLASSES)) return true;
    if (jj_3R_217()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_172() {
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3R_113() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_172()) {
    jj_scanpos = xsp;
    if (jj_3R_173()) {
    jj_scanpos = xsp;
    if (jj_3R_174()) {
    jj_scanpos = xsp;
    if (jj_3R_175()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_194() {
    if (jj_scan_token(SEQ_OBJECTINTERSECTIONOF)) return true;
    if (jj_3R_217()) return true;
    return false;
  }

  private boolean jj_3R_46() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(DATAPROPERTYRANGE)) return true;
    return false;
  }

  private boolean jj_3R_26() {
    if (jj_3R_72()) return true;
    if (jj_scan_token(DATATYPEDEFINITION)) return true;
    return false;
  }

  private boolean jj_3R_214() {
    if (jj_scan_token(DATAONEOF)) return true;
    if (jj_3R_235()) return true;
    return false;
  }

  private boolean jj_3R_177() {
    if (jj_scan_token(SEQ_EQUIVALENTCLASSES)) return true;
    if (jj_3R_217()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_246() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_220()) return true;
    return false;
  }

  private boolean jj_3R_237() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_62()) return true;
    return false;
  }

  private boolean jj_3R_116() {
    if (jj_3R_178()) return true;
    return false;
  }

  private boolean jj_3R_217() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_62()) return true;
    Token xsp;
    if (jj_3R_237()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_237()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_115() {
    if (jj_3R_177()) return true;
    return false;
  }

  private boolean jj_3R_235() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_220()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_246()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_162() {
    if (jj_3R_206()) return true;
    return false;
  }

  private boolean jj_3R_93() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_115()) {
    jj_scanpos = xsp;
    if (jj_3R_116()) return true;
    }
    return false;
  }

  private boolean jj_3R_45() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(DISJOINTDATAPROPERTIES)) return true;
    return false;
  }

  private boolean jj_3R_159() {
    if (jj_3R_203()) return true;
    return false;
  }

  private boolean jj_3R_156() {
    if (jj_3R_200()) return true;
    return false;
  }

  private boolean jj_3R_153() {
    if (jj_3R_197()) return true;
    return false;
  }

  private boolean jj_3R_150() {
    if (jj_3R_194()) return true;
    return false;
  }

  private boolean jj_3R_110() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_150()) {
    jj_scanpos = xsp;
    if (jj_3R_151()) {
    jj_scanpos = xsp;
    if (jj_3R_152()) {
    jj_scanpos = xsp;
    if (jj_3R_153()) {
    jj_scanpos = xsp;
    if (jj_3R_154()) {
    jj_scanpos = xsp;
    if (jj_3R_155()) {
    jj_scanpos = xsp;
    if (jj_3R_156()) {
    jj_scanpos = xsp;
    if (jj_3R_157()) {
    jj_scanpos = xsp;
    if (jj_3R_158()) {
    jj_scanpos = xsp;
    if (jj_3R_159()) {
    jj_scanpos = xsp;
    if (jj_3R_160()) {
    jj_scanpos = xsp;
    if (jj_3R_161()) {
    jj_scanpos = xsp;
    if (jj_3R_162()) {
    jj_scanpos = xsp;
    if (jj_3R_163()) {
    jj_scanpos = xsp;
    if (jj_3R_164()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_213() {
    if (jj_scan_token(SEQ_DATAUNIONOF)) return true;
    if (jj_3R_234()) return true;
    return false;
  }

  private boolean jj_3R_176() {
    if (jj_3R_82()) return true;
    if (jj_scan_token(DISJOINTUNION)) return true;
    if (jj_3R_217()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_25() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(HASKEY)) return true;
    return false;
  }

  private boolean jj_3R_44() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(EQUIVALENTDATAPROPERTIES)) return true;
    return false;
  }

  private boolean jj_3R_212() {
    if (jj_scan_token(SEQ_DATAINTERSECTIONOF)) return true;
    if (jj_3R_234()) return true;
    return false;
  }

  private boolean jj_3R_211() {
    if (jj_scan_token(OBJECTHASSELF)) return true;
    if (jj_3R_76()) return true;
    return false;
  }

  private boolean jj_3R_245() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_63()) return true;
    return false;
  }

  private boolean jj_3R_30() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(DISJOINTCLASSES)) return true;
    if (jj_3R_62()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_210() {
    if (jj_scan_token(OBJECTCOMPLEMENTOF)) return true;
    if (jj_3R_62()) return true;
    return false;
  }

  private boolean jj_3R_43() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(SUBDATAPROPERTYOF)) return true;
    return false;
  }

  private boolean jj_3R_234() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_63()) return true;
    Token xsp;
    if (jj_3R_245()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_245()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_101() {
    if (jj_3R_81()) return true;
    if (jj_scan_token(ANNOTATIONPROPERTYRANGE)) return true;
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_171() {
    if (jj_3R_214()) return true;
    return false;
  }

  private boolean jj_3R_132() {
    if (jj_3R_182()) return true;
    return false;
  }

  private boolean jj_3R_170() {
    if (jj_3R_213()) return true;
    return false;
  }

  private boolean jj_3_31() {
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3R_209() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(OBJECTUNIONOF)) return true;
    if (jj_3R_62()) return true;
    return false;
  }

  private boolean jj_3R_29() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(EQUIVALENTCLASSES)) return true;
    if (jj_3R_62()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3_30() {
    if (jj_3R_46()) return true;
    return false;
  }

  private boolean jj_3R_169() {
    if (jj_3R_212()) return true;
    return false;
  }

  private boolean jj_3_29() {
    if (jj_3R_45()) return true;
    return false;
  }

  private boolean jj_3R_112() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_169()) {
    jj_scanpos = xsp;
    if (jj_3R_170()) {
    jj_scanpos = xsp;
    if (jj_3R_171()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_28() {
    if (jj_3R_44()) return true;
    return false;
  }

  private boolean jj_3_27() {
    if (jj_3R_43()) return true;
    return false;
  }

  private boolean jj_3R_55() {
    if (jj_3R_81()) return true;
    if (jj_scan_token(ANNOTATIONPROPERTYDOMAIN)) return true;
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_96() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_27()) {
    jj_scanpos = xsp;
    if (jj_3_28()) {
    jj_scanpos = xsp;
    if (jj_3_29()) {
    jj_scanpos = xsp;
    if (jj_3_30()) {
    jj_scanpos = xsp;
    if (jj_3_31()) {
    jj_scanpos = xsp;
    if (jj_3R_132()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_107() {
    if (jj_3R_149()) return true;
    return false;
  }

  private boolean jj_3R_90() {
    if (jj_3R_112()) return true;
    return false;
  }

  private boolean jj_3R_69() {
    if (jj_3R_97()) return true;
    return false;
  }

  private boolean jj_3R_18() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(OBJECTINTERSECTIONOF)) return true;
    if (jj_3R_62()) return true;
    return false;
  }

  private boolean jj_3R_91() {
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_113()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    return false;
  }

  private boolean jj_3R_89() {
    if (jj_3R_72()) return true;
    return false;
  }

  private boolean jj_3_2() {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_63() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_89()) {
    jj_scanpos = xsp;
    if (jj_3R_90()) {
    jj_scanpos = xsp;
    if (jj_3R_91()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_28() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(SUBCLASSOF)) return true;
    if (jj_3R_62()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_68() {
    if (jj_3R_96()) return true;
    return false;
  }

  private boolean jj_3R_23() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_68()) {
    jj_scanpos = xsp;
    if (jj_3R_69()) return true;
    }
    return false;
  }

  private boolean jj_3R_54() {
    if (jj_3R_81()) return true;
    if (jj_scan_token(SUBANNOTATIONPROPERTYOF)) return true;
    if (jj_3R_81()) return true;
    return false;
  }

  private boolean jj_3R_168() {
    if (jj_3R_211()) return true;
    return false;
  }

  private boolean jj_3R_114() {
    if (jj_3R_176()) return true;
    return false;
  }

  private boolean jj_3R_167() {
    if (jj_3R_210()) return true;
    return false;
  }

  private boolean jj_3_14() {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_166() {
    if (jj_3R_209()) return true;
    return false;
  }

  private boolean jj_3_13() {
    if (jj_3R_29()) return true;
    return false;
  }

  private boolean jj_3R_131() {
    if (jj_3R_181()) return true;
    return false;
  }

  private boolean jj_3R_165() {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_111() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_165()) {
    jj_scanpos = xsp;
    if (jj_3R_166()) {
    jj_scanpos = xsp;
    if (jj_3R_167()) {
    jj_scanpos = xsp;
    if (jj_3R_168()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_109() {
    if (jj_3R_149()) return true;
    return false;
  }

  private boolean jj_3_12() {
    if (jj_3R_28()) return true;
    return false;
  }

  private boolean jj_3R_92() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3R_114()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_106() {
    if (jj_3R_85()) return true;
    return false;
  }

  private boolean jj_3R_53() {
    if (jj_3R_80()) return true;
    if (jj_scan_token(ANNOTATION)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    return false;
  }

  private boolean jj_3R_79() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_106()) {
    jj_scanpos = xsp;
    if (jj_3R_107()) return true;
    }
    return false;
  }

  private boolean jj_3R_181() {
    if (jj_scan_token(SEQ_DISJOINTOBJECTPROPERTIES)) return true;
    if (jj_3R_218()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_65() {
    if (jj_3R_93()) return true;
    return false;
  }

  private boolean jj_3R_64() {
    if (jj_3R_92()) return true;
    return false;
  }

  private boolean jj_3R_82() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_21() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_64()) {
    jj_scanpos = xsp;
    if (jj_3R_65()) return true;
    }
    return false;
  }

  private boolean jj_3R_85() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_108() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_80() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_108()) {
    jj_scanpos = xsp;
    if (jj_3R_109()) return true;
    }
    return false;
  }

  private boolean jj_3_8() {
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3R_180() {
    if (jj_scan_token(SEQ_EQUIVALENTOBJECTPROPERTIES)) return true;
    if (jj_3R_218()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3_6() {
    if (jj_3R_22()) return true;
    return false;
  }

  private boolean jj_3_5() {
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3R_73() {
    if (jj_3R_101()) return true;
    return false;
  }

  private boolean jj_3R_88() {
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_111()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    return false;
  }

  private boolean jj_3_39() {
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3R_87() {
    if (jj_3R_110()) return true;
    return false;
  }

  private boolean jj_3_38() {
    if (jj_3R_54()) return true;
    return false;
  }

  private boolean jj_3R_86() {
    if (jj_3R_82()) return true;
    return false;
  }

  private boolean jj_3R_238() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_76()) return true;
    return false;
  }

  private boolean jj_3R_62() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_86()) {
    jj_scanpos = xsp;
    if (jj_3R_87()) {
    jj_scanpos = xsp;
    if (jj_3R_88()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_84() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3_11() {
    if (jj_3R_27()) return true;
    return false;
  }

  private boolean jj_3R_218() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    Token xsp;
    if (jj_3R_238()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_238()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3_10() {
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3_9() {
    if (jj_3R_25()) return true;
    return false;
  }

  private boolean jj_3_37() {
    if (jj_3R_53()) return true;
    return false;
  }

  private boolean jj_3_7() {
    if (jj_3R_23()) return true;
    return false;
  }

  private boolean jj_3R_27() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_37()) {
    jj_scanpos = xsp;
    if (jj_3_38()) {
    jj_scanpos = xsp;
    if (jj_3_39()) {
    jj_scanpos = xsp;
    if (jj_3R_73()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_78() {
    if (jj_3R_84()) return true;
    return false;
  }

  private boolean jj_3R_144() {
    if (jj_3R_190()) return true;
    return false;
  }

  private boolean jj_3R_130() {
    if (jj_3R_180()) return true;
    return false;
  }

  private boolean jj_3R_95() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_130()) {
    jj_scanpos = xsp;
    if (jj_3R_131()) return true;
    }
    return false;
  }

  private boolean jj_3R_83() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_188() {
    if (jj_scan_token(SEQ_DIFFERENTINDIVIDUALS)) return true;
    if (jj_3R_221()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_141() {
    if (jj_3R_188()) return true;
    return false;
  }

  private boolean jj_3R_190() {
    if (jj_scan_token(PN_LOCAL)) return true;
    return false;
  }

  private boolean jj_3R_179() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(TRANSITIVEOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_146() {
    if (jj_scan_token(OBJECTINVERSEOF)) return true;
    if (jj_3R_76()) return true;
    return false;
  }

  private boolean jj_3R_72() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_187() {
    if (jj_scan_token(SEQ_SAMEINDIVIDUAL)) return true;
    if (jj_3R_221()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_189() {
    if (jj_scan_token(PNAME_LN)) return true;
    return false;
  }

  private boolean jj_3R_104() {
    if (jj_3R_83()) return true;
    return false;
  }

  private boolean jj_3R_143() {
    if (jj_3R_189()) return true;
    return false;
  }

  private boolean jj_3R_251() {
    if (jj_scan_token(PN_LOCAL)) return true;
    return false;
  }

  private boolean jj_3R_103() {
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_146()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    return false;
  }

  private boolean jj_3R_42() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(IRREFLEXIVEOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_241() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_79()) return true;
    return false;
  }

  private boolean jj_3R_76() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_103()) {
    jj_scanpos = xsp;
    if (jj_3R_104()) return true;
    }
    return false;
  }

  private boolean jj_3R_221() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_79()) return true;
    Token xsp;
    if (jj_3R_241()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_241()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_61() {
    if (jj_scan_token(FULLIRI)) return true;
    return false;
  }

  private boolean jj_3R_239() {
    if (jj_scan_token(STRINGLITERAL)) return true;
    return false;
  }

  private boolean jj_3R_41() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(REFLEXIVEOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_208() {
    if (jj_scan_token(DATAEXACTCARDINALITY)) return true;
    if (jj_3R_227()) return true;
    if (jj_scan_token(CLOSESQPAR)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_233()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_233() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_63()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_142() {
    if (jj_3R_61()) return true;
    return false;
  }

  private boolean jj_3R_140() {
    if (jj_3R_187()) return true;
    return false;
  }

  private boolean jj_3R_100() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_142()) {
    jj_scanpos = xsp;
    if (jj_3R_143()) {
    jj_scanpos = xsp;
    if (jj_3R_144()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_99() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_140()) {
    jj_scanpos = xsp;
    if (jj_3R_141()) return true;
    }
    return false;
  }

  private boolean jj_3R_249() {
    if (jj_scan_token(LANGIDENTIFIER)) return true;
    if (jj_3R_251()) return true;
    return false;
  }

  private boolean jj_3R_40() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(ASYMMETRICOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_250() {
    if (jj_3R_72()) return true;
    return false;
  }

  private boolean jj_3R_186() {
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_220()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_207() {
    if (jj_scan_token(DATAMAXCARDINALITY)) return true;
    if (jj_3R_227()) return true;
    if (jj_scan_token(CLOSESQPAR)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_232()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_240() {
    if (jj_scan_token(OPENSQPAR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_249()) {
    jj_scanpos = xsp;
    if (jj_3R_250()) return true;
    }
    if (jj_scan_token(CLOSESQPAR)) return true;
    return false;
  }

  private boolean jj_3R_232() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_63()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_39() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(SYMMETRICOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_220() {
    if (jj_3R_239()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_240()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_224() {
    if (jj_3R_220()) return true;
    return false;
  }

  private boolean jj_3R_52() {
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_38() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(INVERSEFUNCTIONALOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_231() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_63()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_206() {
    if (jj_scan_token(DATAMINCARDINALITY)) return true;
    if (jj_3R_227()) return true;
    if (jj_scan_token(CLOSESQPAR)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_231()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_185() {
    if (jj_3R_78()) return true;
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_220()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_17() {
    if (jj_scan_token(PREFIX)) return true;
    if (jj_3R_61()) return true;
    return false;
  }

  private boolean jj_3R_149() {
    if (jj_scan_token(NODEID)) return true;
    return false;
  }

  private boolean jj_3R_37() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(FUNCTIONALOBJECTPROPERTY)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_205() {
    if (jj_scan_token(DATAHASVALUE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_220()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_148() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_147()) return true;
    return false;
  }

  private boolean jj_3R_223() {
    if (jj_3R_149()) return true;
    return false;
  }

  private boolean jj_3R_51() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_36() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(INVERSEOBJECTPROPERTIES)) return true;
    if (jj_3R_76()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_204() {
    if (jj_scan_token(DATAALLVALUESFROM)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_63()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_105() {
    if (jj_scan_token(OPENSQPAR)) return true;
    if (jj_3R_147()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_148()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSESQPAR)) return true;
    return false;
  }

  private boolean jj_3R_77() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_105()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_203() {
    if (jj_scan_token(DATASOMEVALUESFROM)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_78()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_63()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_35() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(OBJECTPROPERTYDOMAIN)) return true;
    if (jj_3R_62()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_50() {
    if (jj_3R_62()) return true;
    if (jj_scan_token(OPENPAR)) return true;
    if (jj_3R_79()) return true;
    if (jj_scan_token(CLOSEPAR)) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_222() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3R_192() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_222()) {
    jj_scanpos = xsp;
    if (jj_3R_223()) {
    jj_scanpos = xsp;
    if (jj_3R_224()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_242() {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_147()) return true;
    return false;
  }

  private boolean jj_3R_202() {
    if (jj_scan_token(OBJECTEXACTCARDINALITY)) return true;
    if (jj_3R_227()) return true;
    if (jj_scan_token(CLOSESQPAR)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_230()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_1() {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3R_34() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(OBJECTPROPERTYRANGE)) return true;
    if (jj_3R_62()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_230() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_62()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_49() {
    if (jj_3R_79()) return true;
    if (jj_scan_token(DIFFERENTINDIVIDUALS)) return true;
    if (jj_3R_79()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_225() {
    if (jj_scan_token(OPENSQPAR)) return true;
    if (jj_3R_147()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_242()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(CLOSESQPAR)) return true;
    return false;
  }

  private boolean jj_3R_75() {
    if (jj_3R_102()) return true;
    return false;
  }

  private boolean jj_3R_193() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_225()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_71() {
    if (jj_3R_99()) return true;
    return false;
  }

  private boolean jj_3R_33() {
    if (jj_3R_76()) return true;
    if (jj_scan_token(DISJOINTOBJECTPROPERTIES)) return true;
    if (jj_3R_76()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3R_201() {
    if (jj_scan_token(OBJECTMAXCARDINALITY)) return true;
    if (jj_3R_227()) return true;
    if (jj_scan_token(CLOSESQPAR)) return true;
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_76()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_229()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_229() {
    if (jj_scan_token(OPENBRACE)) return true;
    if (jj_3R_62()) return true;
    if (jj_scan_token(CLOSEBRACE)) return true;
    return false;
  }

  private boolean jj_3R_48() {
    if (jj_3R_79()) return true;
    if (jj_scan_token(SAMEINDIVIDUAL)) return true;
    if (jj_3R_79()) return true;
    if (jj_3R_77()) return true;
    return false;
  }

  private boolean jj_3_36() {
    if (jj_3R_52()) return true;
    return false;
  }

  private boolean jj_3R_81() {
    if (jj_3R_100()) return true;
    return false;
  }

  private boolean jj_3_35() {
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3_34() {
    if (jj_3R_50()) return true;
    return false;
  }

  /** Generated Token Manager. */
  public OWLLatexStyleSyntaxParserTokenManager token_source;
  JavaCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[59];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static private int[] jj_la1_3;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
      jj_la1_init_3();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0x10000000,0x800000,0x80000,0x80000000,0x80000000,0x2020000,0x0,0x20000,0x20000,0x0,0x800000,0x800000,0x200000,0x200000,0x200000,0x200000,0x200000,0x200000,0x20000,0x0,0x20000,0x0,0x800000,0x800000,0x0,0x800000,0x800000,0x80000,0x800,0x800000,0x80000,0x1000000,0x80000,0x0,0x20000,0x0,0x0,0x20000,0x20000,0x800000,0x20000,0x0,0x800000,0x0,0x0,0x0,0x800000,0x2020000,0x0,0x2000000,0x0,0x800000,0x0,0x0,0x800000,0x20000,0x800000,0x0,0x0,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x0,0x0,0x0,0x1,0x1,0x7fdea000,0x0,0x7fdea000,0x7fffa000,0x7fdea000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x540,0x540,0x0,0x0,0x200,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7fdea000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7fdea000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x5000a940,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x140,0x0,0x140,0xa800,0x0,0x0,0x800,0xa000,0x0,0x50000000,0x0,0x50000000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,};
   }
   private static void jj_la1_init_3() {
      jj_la1_3 = new int[] {0x0,0x0,0x0,0x0,0x0,0x10da0,0xd00,0xd00,0xd00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xd00,0x10d00,0xd00,0x0,0x0,0x0,0xd00,0x0,0x0,0x0,0x10d00,0x0,0x0,0xd00,0x0,0xd00,0xd00,0xd00,0x0,0xd00,0xd00,0x0,0xd00,0x0,0x0,0xd00,0xd00,0x0,0x0,0x10da0,0xd00,0x0,0xa0,0x0,0xd00,0x10d00,0x0,0xd00,0x0,0xd00,0xd00,};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[44];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public OWLLatexStyleSyntaxParser(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public OWLLatexStyleSyntaxParser(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new OWLLatexStyleSyntaxParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 59; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 59; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public OWLLatexStyleSyntaxParser(java.io.Reader stream) {
    jj_input_stream = new JavaCharStream(stream, 1, 1);
    token_source = new OWLLatexStyleSyntaxParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 59; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 59; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public OWLLatexStyleSyntaxParser(OWLLatexStyleSyntaxParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 59; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(OWLLatexStyleSyntaxParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 59; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              continue jj_entries_loop;
            }
          }
          jj_expentries.add(jj_expentry);
          break jj_entries_loop;
        }
      }
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[114];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 59; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
          if ((jj_la1_3[i] & (1<<j)) != 0) {
            la1tokens[96+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 114; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 44; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
            case 21: jj_3_22(); break;
            case 22: jj_3_23(); break;
            case 23: jj_3_24(); break;
            case 24: jj_3_25(); break;
            case 25: jj_3_26(); break;
            case 26: jj_3_27(); break;
            case 27: jj_3_28(); break;
            case 28: jj_3_29(); break;
            case 29: jj_3_30(); break;
            case 30: jj_3_31(); break;
            case 31: jj_3_32(); break;
            case 32: jj_3_33(); break;
            case 33: jj_3_34(); break;
            case 34: jj_3_35(); break;
            case 35: jj_3_36(); break;
            case 36: jj_3_37(); break;
            case 37: jj_3_38(); break;
            case 38: jj_3_39(); break;
            case 39: jj_3_40(); break;
            case 40: jj_3_41(); break;
            case 41: jj_3_42(); break;
            case 42: jj_3_43(); break;
            case 43: jj_3_44(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
